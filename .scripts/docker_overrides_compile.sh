#!/usr/bin/env bash
set -euo pipefail
IFS=$'\n\t'

docker_overrides_compile() {
    local FILES_INCLUDED=0
    local DOCKER_OVERRIDES_DIR
    DOCKER_OVERRIDES_DIR=$(run_script 'env_get' DOCKEROVERRIDESDIR)

    info "Running Docker Overrides Compiler"
    # Check if initializer needs to be run
    if [[ -z ${DOCKER_OVERRIDES_DIR} || ! -d ${DOCKER_OVERRIDES_DIR} ]] || ([[ -f "${SCRIPTPATH}/compose/docker-compose.override.yml" ]] && ! grep -q 'GENERATED BY DOCKSTARTER' "${SCRIPTPATH}/compose/docker-compose.override.yml"); then
        run_script "docker_overrides_initialize"
        DOCKER_OVERRIDES_DIR=$(run_script 'env_get' DOCKEROVERRIDESDIR)
    fi

    if ! run_script "docker_overrides_validate" Y; then
        if run_script 'question_prompt' "${PROMPT:-}" N "Validation errors were found. Do you want to continue?"; then
            info "Continuing with validation errors."
        else
            info "Docker Overrides Compiler will not be run."
            exit
        fi
    else
        info "Pre-compiler validation had no errors!"
    fi

    info "Merging docker-compose.overrides.yml file."
    local RUNFILE
    RUNFILE=$(mktemp) || fatal "Failed to create temporary yml merge script."
    echo "#!/usr/bin/env bash" > "${RUNFILE}"
    {
        # Merge any included yml
        echo '/usr/local/bin/yq-go m '\\
        echo "${SCRIPTPATH}/compose/.reqs/*.yml \\"
    } >> "${RUNFILE}"
    info "Required files included."

    info "Checking ${DOCKER_OVERRIDES_DIR}/ for valid .yml files"
    shopt -s dotglob
    while IFS= read -r path; do
        if [[ -f ${path} ]]; then
            if yq-go v "${path}" > /dev/null 2>&1; then
                echo "${path} \\" >> "${RUNFILE}"
                info "${path//${DOCKER_OVERRIDES_DIR}\//} included"
                FILES_INCLUDED=$((FILES_INCLUDED + 1))
            fi
        fi
    done < <(find "${DOCKER_OVERRIDES_DIR}"/* -type f -name '*.yml' -not -name "docker-compose.override.original.yml" -prune 2> /dev/null)
    shopt -u dotglob

    # Include the user's original overrides, if they existed
    if [[ -f ${DOCKER_OVERRIDES_DIR}/docker-compose.override.original.yml ]]; then
        if yq-go v "${DOCKER_OVERRIDES_DIR}/docker-compose.override.original.yml" > /dev/null 2>&1; then
            echo "${DOCKER_OVERRIDES_DIR}/docker-compose.override.original.yml \\" >> "${RUNFILE}"
        else
            warn "docker-compose.override.original.yml is not valid yml. Please check your syntax."
        fi
    fi

    echo ">> ${SCRIPTPATH}/compose/docker-compose.override.generated.yml" >> "${RUNFILE}"

    # Make sure there were files included to merge
    if [[ ${FILES_INCLUDED} -gt 0 ]]; then
        notice "Generating overrides file."
        info "Adding headers..."
        {
            echo '################################################################'
            echo '#                   GENERATED BY DOCKSTARTER                   #'
            echo '#                        DO NOT MODIFY!                        #'
            echo '# If you already had this file, it has been retained and moved #'
            echo '# See DockSTARTer documentation for more information           #'
            echo '# https://dockstarter.com/advanced/overrides/                  #'
            echo '################################################################'
        } > "${SCRIPTPATH}/compose/docker-compose.override.generated.yml"

        run_script 'install_yq'
        info "Merging yml..."
        if bash "${RUNFILE}" > /dev/null 2>&1; then
            info "Docker Overrides file successfully generated!"
            # Remove the RUNFILE
            rm -f "${RUNFILE}" || warn "Failed to remove temporary yml merge script."
            info "Overwriting docker-compose.override.yml with generated file."
            mv "${SCRIPTPATH}/compose/docker-compose.override.generated.yml" "${SCRIPTPATH}/compose/docker-compose.override.yml" || fatal "Unable to replace docker-compose.override.yml"
            notice "Docker Overrides complete!"
        else
            # Remove the RUNFILE
            rm -f "${RUNFILE}" || warn "Failed to remove temporary yml merge script."
            fatal "Merging failed. Overrides file not generated."
        fi
    else
        warn "No valid yml files to include. Not generating an overrides file."
    fi
}

test_docker_overrides_compile() {
    run_script 'docker_overrides_compile'
}

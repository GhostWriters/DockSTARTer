{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>The main goal of DockSTARTer is to make it quick and easy to get up and running with Docker.</p> <p>You may choose to rely on DockSTARTer for various changes to your Docker system or use DockSTARTer as a stepping stone and learn to do more advanced configurations.</p> <p></p> <p></p> <p></p> <p></p> <p></p>"},{"location":"#getting-started","title":"Getting Started","text":""},{"location":"#system-requirements","title":"System Requirements","text":"<ul> <li>You must be running a supported platform or an operating system based on a supported platform. Platforms named below will link to documentation listing compatible versions.</li> <li>You must be logged in as a non-root user with sudo permissions.</li> </ul>"},{"location":"#one-time-setup-required","title":"One Time Setup (required)","text":"<ul> <li>APK Systems (Alpine)</li> </ul> <pre><code>sudo apk add curl git\nbash -c \"$(curl -fsSL https://get.dockstarter.com)\"\nsudo reboot\n</code></pre> <ul> <li>APT Systems (Debian, Ubuntu, etc)</li> </ul> <pre><code>sudo apt-get install curl git\nbash -c \"$(curl -fsSL https://get.dockstarter.com)\"\nsudo reboot\n</code></pre> <p>Raspbian requires a few extra commands</p> <pre><code>sudo apt-get update\nsudo apt-get dist-upgrade\nsudo apt-get install curl git\nbash -c \"$(curl -fsSL https://get.docker.com)\"\nbash -c \"$(curl -fsSL https://get.dockstarter.com)\"\nsudo reboot\n</code></pre> <p>OpenMediaVault (OMV) requires special instructions found here</p> <ul> <li>DNF Systems (Fedora)</li> </ul> <pre><code>sudo dnf install curl git\nbash -c \"$(curl -fsSL https://get.dockstarter.com)\"\nsudo reboot\n</code></pre> <ul> <li>Pacman Systems (Arch, Manjaro, EndeavourOS, etc.)</li> </ul> <pre><code>sudo pacman -Sy curl docker git\nbash -c \"$(curl -fsSL https://get.dockstarter.com)\"\nsudo reboot\n</code></pre> <ul> <li>YUM Systems (CentOS)</li> </ul> <pre><code>sudo yum install curl git\nbash -c \"$(curl -fsSL https://get.dockstarter.com)\"\nsudo reboot\n</code></pre> Alternate install (any system)  The standard install above downloads the initial script using a method with some known risks. For those concerned with the security of the above method, here is an alternative:  <pre><code>## NOTE: Run the appropriate command for your distro\nsudo apt-get install curl git\nsudo dnf install curl git\nsudo pacman -Sy curl git\nsudo yum install curl git\n</code></pre>  Then  <pre><code>git clone https://github.com/GhostWriters/DockSTARTer \"/home/${USER}/.docker\"\nbash /home/\"${USER}\"/.docker/main.sh -vi\nsudo reboot\n</code></pre>"},{"location":"#running-dockstarter","title":"Running DockSTARTer","text":"<pre><code>ds\n</code></pre> <p>To run DockSTARTer, use the command above. You should now see the main menu from the screenshots. Select <code>Configuration</code> and then <code>Full Setup</code>, and you will be guided through selecting apps and starting containers.</p> <p>See our documentation for more detailed information.</p>"},{"location":"#support","title":"Support","text":"<p>Click the chat badge to join us on Discord for support!</p> <p>Feature Request | Bug Report</p> <p>Additional information can be found on our Support Page.</p>"},{"location":"#contributing","title":"Contributing","text":"<p>Want to help develop DockSTARTer? Check out our contributing guidelines and code of conduct.</p>"},{"location":"#contributors","title":"Contributors","text":"<p>This project exists thanks to all the people who contribute. </p>"},{"location":"#supporters","title":"Supporters","text":"<p>Support the project by donating on Open Collective.</p>"},{"location":"#backers","title":"Backers","text":"<p>Thank you to all our backers! Become a backer.</p> <p></p>"},{"location":"#sponsors","title":"Sponsors","text":"<p>Support this project by becoming a sponsor. Your logo will show up here with a link to your website. Become a sponsor.</p> <p> </p>"},{"location":"#special-thanks","title":"Special Thanks","text":"<ul> <li>SmartHomeBeginner.com for creating AtoMiC-ToolKit that served as this project's primary inspiration, and later this guide that provided some initial direction with Docker.</li> <li>LinuxServer.io for maintaining most Docker images used in this project.</li> </ul>"},{"location":"introduction/","title":"Introduction","text":""},{"location":"introduction/#what-dockstarter-is","title":"What DockSTARTer Is","text":"<ul> <li>DockSTARTer is a script that installs Docker and other dependencies for you.</li> <li>DockSTARTer comes with configurations to run various apps.</li> <li>DockSTARTer can be operated through a friendly GUI of terminal menus.</li> <li>DockSTARTer can be operated through commands for more advanced users who do not prefer the GUI.</li> <li>DockSTARTer is here to give you the freedom to choose what you want to run.</li> <li>DockSTARTer allows you to run apps that are not included using Overrides / Introduction.</li> </ul>"},{"location":"introduction/#what-dockstarter-is-not","title":"What DockSTARTer Is Not","text":"<ul> <li>DockSTARTer is not a pre-made set of apps that run an exact way (you get to choose what to run and how to run it).</li> <li>DockSTARTer does not configure apps for you (think of it more like installing apps as a service, settings inside the app are still up to you, although our documentation will have recommendations).</li> <li>DockSTARTer does not configure storage for you (you may use local storage, or cloud storage, multiple disks, raid, etc).</li> </ul>"},{"location":"introduction/#system-requirements","title":"System Requirements","text":""},{"location":"introduction/#supported-operating-systems","title":"Supported Operating Systems","text":"<p>You must be running a Supported Platform or an operating system based on a supported platform. Platforms named below will link to documentation listing compatible versions.</p> <ul> <li>CentOS</li> <li>Debian</li> <li>Fedora</li> <li>Ubuntu</li> </ul> <p>Any operating system based on one of the above (ex: Raspbian) should also work as long as you can install the officially supported script. DockSTARTer will attempt to perform this install for you if possible.</p>"},{"location":"introduction/#supported-hardware","title":"Supported Hardware","text":"<p>Any <code>x86_64</code> or <code>aarch64</code> system should be able to run one of the supported operating systems listed above. ARM CPUs may have a limited selection of supported containers.</p>"},{"location":"introduction/#windows-support","title":"Windows Support","text":"<p>Currently we recommend installing one of the supported platforms above in a VM. In the future we may be able to support the Windows Subsystem for Linux version 2.</p>"},{"location":"introduction/#videos","title":"Videos","text":"<ul> <li>Getting Started</li> <li>Version Control Visualization</li> </ul>"},{"location":"advanced/backups/","title":"Backups","text":""},{"location":"advanced/backups/#this-is-deprecated-and-removed-from-dockstarter-as-of-01012020","title":"THIS IS DEPRECATED AND REMOVED FROM DOCKSTARTER AS OF 01/01/2020","text":""},{"location":"advanced/backups/#creating-backups","title":"Creating backups","text":"<p>DockSTARTer menu has an option for <code>Backup Config</code>, or you can use one of <code>ds -b min</code> / <code>ds -b med</code> / <code>ds -b max</code> to create backups.</p> <p>Min: Backs up your .env file Med: Backs up your .env file and the config folder for any enabled app Max: Backs up your .env file and any config folder found in your DOCKER_VOLUME_CONFIG. Apps will be stopped before running a backup and started after completing a backup.</p> <p>Med and Max also support pre/post commands in between each app (so you could disable uptime monitors for example) Min, Med, and Max support pre/post commands for the entire run. These commands can be set in <code>.env</code></p>"},{"location":"advanced/backups/#scheduling-backups","title":"Scheduling backups","text":"<p>It is recommended to setup a cron job using <code>sudo crontab -e</code> and adding a line like</p> <pre><code>0 2 * * * /home/&lt;USER&gt;/.docker/main.sh -b min\n</code></pre> <p>or</p> <pre><code>0 2 * * * /home/&lt;USER&gt;/.docker/main.sh -b med\n</code></pre> <p>or</p> <pre><code>0 2 * * * /home/&lt;USER&gt;/.docker/main.sh -b max\n</code></pre> <p>Which would make a daily backup at 2 AM.</p>"},{"location":"advanced/backups/#backup-retention","title":"Backup retention","text":"<p>The snapshot backup is created into <code>${BACKUP_CONFDIR}/&lt;appname&gt;.001</code>. If the folder <code>&lt;appname&gt;.001</code> exists already it is rotated to <code>&lt;appname&gt;.002</code> and so on, up to <code>&lt;appname&gt;.512</code> by default (this can be adjusted), thereafter it is removed. So if you create one backup per night, for example with a cronjob, then this retention policy gives you 512 days of retention. This is useful but this can require to much disk space, that is why we have included a non-linear distribution policy. In short, we keep only the oldest backup in the range 257-512, and also in the range 129-256, and so on. This exponential distribution in time of the backups retains more backups in the short term and less in the long term; it keeps only 10 or 11 backups but spans a retention of 257-512 days. In the following table you can see on each column the different steps of the rotation, where each column shows the current set of snapshots (limited from <code>&lt;appname&gt;.1</code> to <code>&lt;appname&gt;.16</code> in this example):</p> <pre><code>1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1\n2   2   2   2   2   2   2   2   2   2   2   2   2   2   2   2   2\n    3       3       3       3       3       3       3       3\n4       4       4       4       4       4       4       4       4\n    5               5               5               5\n        6               6               6               6\n            7               7               7               7\n8               8               8               8               8\n    9                               9\n        10                              10\n            11                              11\n                12                              12\n                    13                              13\n                        14                              14\n                            15                              15\n16                              16                              16\n</code></pre> <p>To save more disk space, <code>rsync</code> will make hard links for each file of <code>&lt;appname&gt;.001</code> that already existed in <code>&lt;appname&gt;.002</code> with identical content, timestamps and ownerships.</p>"},{"location":"advanced/backups/#deleting-backups","title":"Deleting backups","text":"<p>Backups created by DockSTARTer will be protected with a special attribute called <code>immutable</code> that makes the backups read only to all users including root. This is done to protect your backups from accidental deletion. Backups will be rotated through retention as described above because the backup script handles the immutable attribute. If you need to delete a backup manually you will first need to remove the immutable attribute from the folder using <code>sudo chattr -R -i /path/to/backup/&lt;appname&gt;.###</code></p>"},{"location":"advanced/backups/#credits","title":"Credits","text":"<p>The backup function is strongly borrowed from http://www.pointsoftware.ch/en/howto-local-and-remote-snapshot-backup-using-rsync-with-hard-links/ which has sections explaining how the <code>rsync</code> process works, including information about hard links (backups don't take up as much space as you think!)</p>"},{"location":"advanced/domain-info/","title":"Domain Info","text":""},{"location":"advanced/domain-info/#using-ddclient-with-ddns-and-google-domains-and-others","title":"Using ddclient with DDNS and Google Domains (and others)","text":"<p>Info to come.</p>"},{"location":"advanced/macvlan/","title":"Macvlan Networking","text":"<p>It may help to read the official documentation on Macvlan networks, as well as this tutorial which this page is based on.</p>"},{"location":"advanced/macvlan/#motivation","title":"Motivation","text":"<p>There are a few different types of Docker networks. DockSTARTer by default uses a 'bridge' network, which is a virtual network that provides isolation from other networks, but allows containers to communicate with each other.</p> <p>However, some applications require access to the physical network. Both Home Assistant and Plex need physical network access for discovery (the former will have issues communicating with IoT devices otherwise).</p> <p>One solution might be to use Docker's <code>host</code> network. This however, increases the odds of port conflicts as more containers are added. Docker introduced a Macvlan network for this case which assigns a unique IP and MAC address for attached containers.</p>"},{"location":"advanced/macvlan/#setup","title":"Setup","text":""},{"location":"advanced/macvlan/#on-your-router","title":"On Your Router","text":"<ul> <li> <p>Take note of the IP address of your Docker host and create a DHCP reservation for the IP if there isn't one already.</p> </li> <li> <p>Configure DHCP so it will not assign address in a given range. That range will be occupied by our container's addresses.</p> </li> </ul> <p>The rest of this tutorial assumes addresses above <code>X.X.X.190</code> will be free.</p>"},{"location":"advanced/macvlan/#on-your-docker-host","title":"On Your Docker Host","text":"<ul> <li>Create the macvlan network (see Note 1):</li> </ul> <pre><code>docker network create -d macvlan -o parent=&lt;myinterface&gt; --subnet X.X.X.0/24 --gateway X.X.X.1\n--ip-range X.X.X.192/27 --aux-address 'host=X.X.X.Y' mymacvlan\n</code></pre> <ul> <li><code>&lt;myinterface&gt;</code> is the network interface your device is receiving data from. Run <code>ifconfig</code> for a listing of possible -nterfaces. Ex: <code>eth0</code></li> <li><code>subnet</code> and <code>gateway</code> are specific to your LAN subnet</li> <li><code>ip-range</code> is the range in which Docker will assign IP addresses. This example goes from <code>X.X.X.192</code> to <code>X.X.X.223</code></li> <li> <p><code>X.X.X.Y</code> following <code>host</code> should be the IP address of your Docker host.</p> </li> <li> <p>Add the following to <code>/etc/network/interfaces</code> after replacing information as needed:</p> </li> </ul> <pre><code># Create new macvlan interface on the host\nip link add mymacvlanshim link myinterface type macvlan mode bridge\n# Add the host address and bring up the interface\nip addr add X.X.X.Y/32 dev mymacvlanshim\nip link set mymacvlanshim up\n# Tell our host to use that interface to communicate with containers\nip route add 192.168.86.192/27 dev mymacvlanshim\n</code></pre> <ul> <li>Reboot</li> </ul> <p>Note 1 You may be wondering why we don't create the network in Docker compose. Newer versions of compose have issues with using <code>aux-address</code> and <code>ip-range</code>.</p>"},{"location":"advanced/macvlan/#in-your-dockstarter-overrides","title":"In Your DockSTARTer Overrides","text":"<p>We could connect our containers to <code>mymacvlan</code> and call it a day, but it's very useful to reserve IPs for each container so we can reach web endpoints in a consistent way.</p> <ul> <li>Add something similar to this to your <code>docker-compose.override.yml</code> file for each container:</li> </ul> <pre><code>services:\n  watchtower:\n    networks:\n      composemacvlan:\n        ipv4_address: X.X.X.201\nnetworks:\n  composemacvlan:\n    external:\n      name: mymacvlan\n</code></pre> <p>The <code>ipv4</code> address should fall in the range you reserved.   Unfortunately, it's necessary to do this when adding new containers if you want them on the same network.</p> <p>After this, you should be able to compose (<code>ds -c</code>) and have a new shiny macvlan network! The containers will be available at the addresses you specified.</p>"},{"location":"advanced/openmediavault/","title":"OpenMediaVault (OMV)","text":"<p>OpenMediaVault (OMV) requires some special setup in order to install DockSTARTer (DS). DS staff have tested and confirmed the following installation method on OMV version 5.5.</p> <p>If you are a Linux newbie, we strongly discourage this approach because of all the issues that might arise with how OMV is built, and troubleshooting issues in OMV can be a pain. However, if you feel comfortable with Linux and want to continue down this route you will need to ensure the following:</p> <ul> <li>You have installed all the necessary updates that are pending in your system.</li> <li>You have set a DNS server in your Web GUI.</li> <li>You have created a user with a home directory outside of the system disk that has <code>sudo</code> and <code>ssh</code> permissions. See below in how to do that.</li> <li>You have a secondary disk other than the system drive mounted and formatted to anything other than NTFS.</li> <li>We recommend you set up a specific \"Shared Folder\" for your home directory. <code>appdata</code> directory should only be used to store container configurations, not home directories.</li> </ul> <p>SSH to your host as root. You will need to edit a system config file in order to avoid issues in the future. Run the following command (you can use your favorite text editor for this portion):</p> <p><code>nano /etc/openmediavault/config.xml</code></p> <p>We are looking for the following line:</p> <p><code>&lt;opts&gt;defaults,nofail,user_xattr,noexec,usrjquota=aquota.user,grpjquota=aquota.group,jqfmt=vfsv0,acl...</code></p> <p>The part you care about is the <code>noexec</code> bit. You will need to remove that string. Save the file and per OMV documentation you need to run <code>omv-salt deploy run fstab</code>. To verify that the <code>noexec</code> flag was removed from your drive run <code>cat /proc/mounts</code> and find your drive on the list. You can also run <code>cat /proc/mounts | grep partial_drive_name</code>. If the <code>noexec</code> flag is present, you skipped a step.</p> <p>We are now going to work on creating the directories for DS to use. You will need to create 4 shared folders and allow \"Everyone read/write\". The 4 directories will be called <code>appdata</code>, <code>storage</code>, <code>medialibrary</code> and <code>home</code>.</p> <p>The last directory should be where you store your user directories and you should not be using the system disk for that. If you do not know how to create a user and assign it a home directory; look up the OMV documentation as that is outside of the scope of this guide.</p> <p>Once the above requirements have been met, you will need to SSH to your OMV host using the account you created. First make sure your home directory was set up correctly by typing <code>cd ~</code>. This shouldn't return an error, if it does read over the OMV documentation in how to properly create a user with a home directory. If no error occurs, run the following commands:</p> <p><code>sudo apt-get install curl git</code> <code>bash -c \"$(curl -fsSL https://get.dockstarter.com)\"</code> <code>sudo reboot</code></p> <p>After the reboot is complete, SSH back to your host using your user account and run <code>ds</code>, type your password and select \"Configuration\". Select \"Set Global Variables\" and select \"No\" on the next prompt. The only thing we recommend changing is the <code>PGID</code> to <code>Use System 100</code>. On the next screen, please take note of the path that starts with <code>/srv/dev-disk-by-label-XXX</code>. You are going to want to remember this path to set your <code>appdata</code>, <code>storage</code>, <code>media</code> and <code>downloads</code> folder to that path, for instance: <code>/srv/dev-disk-by-label-DS/appdata/</code>, <code>/srv/dev-disk-by-label-DS/media/movies</code>, etc.</p>"},{"location":"advanced/smb-mounting/","title":"SMB Mounting","text":""},{"location":"advanced/smb-mounting/#linux-host","title":"Linux Host","text":"<p>Create a file called <code>.credentials</code> or the like in your home folder. In this folder, you're going to put this:</p> <pre><code>username=&lt;username to access resource&gt;\npassword=&lt;password to access resource&gt;\n</code></pre> <p>substitute your own variables of course.</p> <p>From here, you're going to want to install cifs-utils: <code>sudo apt-get install cifs-utils</code></p> <p>Then once that's done, you should be able to mount your SMB/Windows Share like so:</p> <pre><code>sudo mount -t cifs //&lt;host&gt;/Downloads /mnt/downloads -o uid=1000,gid=1000,credentials=/home/&lt;your home user&gt;/.credentials,rw,vers=3.0\n</code></pre> <p>And to make sure that sticks, you're going to put this entry in your <code>/etc/fstab</code> file (You'll probably want to put it at the bottom) to match: <code>//&lt;host&gt;/Downloads /mnt/downloads cifs uid=1000,gid=1000,credentials=/home/&lt;your home user&gt;/.credentials,rw,vers=3.0</code></p> <p>You should be able to reboot to test the mount, but you should now be able to <code>ls -al /mnt/Downloads</code> (in my example) and see the files in your Shared Downloads folder!</p>"},{"location":"advanced/smb-mounting/#oplock-issues","title":"OpLock issues","text":"<p>If you have containers that lock the drive and fail to unlock, you can deny the granting of opportunistic locks by setting the following registry entry:</p> <pre><code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\mrxsmb\nHKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\mrxsmb20\nEnableOplocks REG_DWORD 0\n</code></pre>"},{"location":"advanced/smb-mounting/#windows-host","title":"Windows Host","text":"<p><code>net use Z: \\\\host\\Downloads</code></p>"},{"location":"advanced/technical-info/","title":"Technical Info","text":""},{"location":"advanced/technical-info/#how-does-dockstarter-work","title":"How Does DockSTARTer Work","text":"<p>DockSTARTer works by generating the configuration that Compose uses. A linux \"pro\" might use Compose to do what DockSTARTer does themselves but it would still take a lot longer.</p> <p>Compose is a tool for defining and running multi-container Docker applications. To learn more about Compose refer to the following documentation.</p> <p>Compose works by reading YAML (*.yml) configuration files with the paths, ports and parameters each Container should run with.</p>"},{"location":"advanced/technical-info/#yml-files","title":"YML Files","text":"<ul> <li>DO NOT EDIT THESE FILES DIRECTLY. Overriding these settings is easy but you must create a new file first. See the Overrides / Introduction page.</li> </ul> <p>YML files are akin to XML files and below is an example:</p> <pre><code>services:\n  sonarr:\n    container_name: ${SONARR__CONTAINER_NAME?}\n    env_file: env_files/sonarr.env\n    environment:\n      - PGID=${PGID?}\n      - PUID=${PUID?}\n      - TZ=${TZ?}\n    restart: ${SONARR__RESTART?}\n    volumes:\n      - /etc/localtime:/etc/localtime:ro\n      - ${DOCKER_VOLUME_CONFIG?}/sonarr:/config\n      - ${DOCKER_VOLUME_STORAGE?}:/storage\n</code></pre> <p>In the example above,</p> <p>image is the Container that you're using but also the quasi URL Docker will attempt to pull it from.</p> <p>container_name is the human readable name Docker will use to describe it.</p>"},{"location":"advanced/technical-info/#variables","title":"Variables","text":""},{"location":"advanced/technical-info/#env_file","title":"env_file","text":"<p>All variables contained in the file listed here will be loaded for the application.  Each application could have any number of variables listed, or none.  You can edit the values of the included variables in the file. You can also add any variables you need to add yourself to this file, and they will also be loaded.</p>"},{"location":"advanced/technical-info/#environment","title":"environment","text":"<p>This section contains a list of variables added for the application.  They are generally set to values of variables contained in the global <code>.env</code> file.</p>"},{"location":"advanced/technical-info/#volumes","title":"Volumes","text":"<p>During the Getting Started section, you set volumes for your configuration, download and media etc in the<code>GLOBAL</code> section.</p> <p>The path to Sonarr's config in the above example, broken up, is <code>${DOCKER_VOLUME_CONFIG}/sonarr</code> then the deliminator <code>:</code> followed by <code>/config</code></p> <p><code>${DOCKER_VOLUME_CONFIG}/sonarr</code> is the path on your computer that Sonarr will see when it looks in <code>/config</code>. In this way, all your Containers will have their own private folder in your global config mount.</p> <p>The <code>${DOCKER_VOLUME_STORAGE}</code> location is public to all apps that need it. That means Sonarr will be writing and reading from the same <code>${DOCKER_VOLUME_STORAGE}:/storage</code> mounts as Radarr, SickBeard etc AND your download clients.</p> <p>Again, do not edit the default YML files, instead, see the section on Overrides / Introduction. (Assuming you are reading this page from start to finish for the first time) there is a reason you haven't seen their location yet ;)</p>"},{"location":"advanced/technical-info/#ports","title":"Ports","text":"<p>The ports for access to (and from) your apps are manipulated in your <code>.env</code> settings. I use the Sonarr example a lot but if you're not familiar, it's default port is <code>8989</code>.</p> <p><code>SONARR__PORT_8989=6969</code></p> <p>If you were to edit the <code>.env</code> for sonarr to the above, and run the generator again, you would then access Sonarr at <code>http://app.address:6969/calendar</code> instead of the default port, 8989.</p> <ul> <li>Do not change your apps internal ports unless you know what you are doing. For instance, if you change Sonarr's internal port to 4545, it will still listen on 8989 by default. So then, you won't be able to access the WebGUI and without that, I don't even know where to begin changing the port in Sonarr's config files. And unless you want to run Transmission and RuTorrent side by side, I can't think of a good reason to change them in <code>.env</code> either.</li> </ul>"},{"location":"advanced/uninstall/","title":"Uninstalling","text":"<p>Blurb from our Discord follows:</p> <p>... you can remove everything in <code>~/.docker</code> with exception to <code>~/.docker/config</code> (which you may not have if your config is at <code>~/.config/appdata</code>). However, you may want to consider keeping the <code>~/.docker/compose/docker-compose.yml</code> and <code>~/.docker/compose/.env</code> to rebuild it using <code>sudo docker-compose</code> and pass the envs.</p> <p>... you should see your containers in <code>docker ps -a</code> or GUI such as Portainer.</p> <p>DS installs everything by running docker compose the way docker recommends, so all DS is really doing is merging a compose file together for you. Once you have the compose file you can remove DS if you like. Also DS itself doesn't do anything on its own, so you could just leave it in place. Keep up with your .env file and your config folder and everything can be done using the official compose commands.</p> <p>Just save any configurations you decide you need to keep, and delete the <code>~/.docker</code> folder. DockSTARTer installs docker using get.docker.com so you can read through that to undo it if you decide you need to. Compose is run via a docker container, so there's nothing to uninstall.</p> <p>Note: The above has been updated and modified with more recent info.</p>"},{"location":"advanced/vpn-info/","title":"VPN Info","text":""},{"location":"advanced/vpn-info/#vpn-services-available-to-use-through-dockstarter","title":"VPN Services available to use through DockSTARTer","text":"<p>VPN use is only available where we have found a easily configured container that runs as its own self contained unit.</p> <ul> <li>Gluetun</li> <li>PrivoxyVPN</li> </ul>"},{"location":"advanced/vpn-info/#vpn-tun-driver","title":"VPN tun driver","text":"<p>The VPN containers require an adjustment to your host system:</p> <pre><code>echo \"iptable_mangle\" | sudo tee /etc/modules-load.d/iptable_mangle.conf\necho \"tun\" | sudo tee /etc/modules-load.d/tun.conf\nsudo reboot\n</code></pre>"},{"location":"advanced/vpn-info/#how-to-check-if-the-vpn-is-working","title":"How to check if the VPN is working","text":"<ul> <li>https://torguard.net/checkmytorrentipaddress.php</li> <li>http://www.doileak.com/</li> <li>http://ipmagnet.services.cbcdn.com/</li> <li>http://test.torrentprivacy.com/</li> </ul>"},{"location":"advanced/vpn-info/#use-a-vpn-for-everything","title":"Use a VPN for everything","text":"<p>If you require VPN on all connections it is recommended to install OpenVPN as you normally would ( in <code>/etc/openvpn</code> etc etc) and then have the Docker service started and stopped by the up / down scripts.</p> <p>You can disable auto starting of the containers by disabling the docker service. An example provided by a user in our community for Ubuntu:</p> <p><code>sudo systemctl disable docker</code></p> <p>vpnup.sh</p> <pre><code>#!/bin/bash\nif [[ -L \"/sbin/init\" ]]; then\n    systemctl start docker\nelse\n    /etc/init.d/docker start\nfi\n</code></pre> <p>vpndown.sh</p> <pre><code>#!/bin/bash\nif [[ -L \"/sbin/init\" ]]; then\n    systemctl stop docker\nelse\n    /etc/init.d/docker stop\nfi\n</code></pre> <p>If you make changes to your <code>.env</code> file you will need to run <code>ds -c</code>. If you stop the OpenVPN service, thereby stopping Docker, DockSTARTER might fail. Start your OpenVPN service and run <code>ds -c</code> again if it didn't work.</p>"},{"location":"apps/actualbudget/","title":"Actual Budget","text":""},{"location":"apps/actualbudget/#description","title":"Description","text":"<p>Actual Budget is a fast, privacy-focused, and open-source personal finance app built with a local-first approach. It\u2019s written in NodeJS and is 100% free to use. With Actual, you own your data-manage your finances confidently knowing you can do whatever you want with your information, including syncing changes seamlessly across all your devices, with optional end-to-end encryption for maximum privacy.</p>"},{"location":"apps/actualbudget/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/adguard/","title":"Adguard","text":""},{"location":"apps/adguard/#description","title":"Description","text":"<p>Adguard is a network-wide ads &amp; trackers blocking DNS server.</p>"},{"location":"apps/adguard/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/adminer/","title":"Adminer","text":""},{"location":"apps/adminer/#description","title":"Description","text":"<p>Adminer (formerly phpMinAdmin) is a full-featured database management tool written in PHP. Adminer is available for MySQL, MariaDB, PostgreSQL, SQLite, MS SQL, Oracle, Elasticsearch, MongoDB and others via plugin.</p>"},{"location":"apps/adminer/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/airdcpp/","title":"AirDC++","text":""},{"location":"apps/airdcpp/#deprecated","title":"DEPRECATED","text":"<p>DEPRECATION NOTICE: This image is deprecated as of 2022-06-09 due to failure to pass CI manifest checks. The failing command is: <code>docker manifest inspect gangefors/airdcpp-webclient</code>. It appears the image should still work fine, and if this issue is resolved in the future we can reverse the deprecation.</p> <p> </p>"},{"location":"apps/airdcpp/#description","title":"Description","text":"<p>AirDC++ is an easy to use client for Advanced Direct Connect and Direct Connect networks. You are able to join \"hubs\" with other users, and chat, perform searches and browse the share of each user.</p>"},{"location":"apps/airdcpp/#installsetup","title":"Install/Setup","text":"<p>If you see the following error:</p> <p>No valid configuration found. Run the application with --configure parameter to set up initial configuration.</p> <p>Run the following commands to correct:</p> <pre><code>docker stop airdcpp\ndocker run --rm -it --volumes-from airdcpp gangefors/airdcpp-webclient --add-user\n</code></pre> <p>You will be prompted to create a user and password, then run:</p> <pre><code>docker start airdcpp\n</code></pre>"},{"location":"apps/airsonic/","title":"Airsonic","text":""},{"location":"apps/airsonic/#deprecated","title":"DEPRECATED","text":"<p>DEPRECATION NOTICE: This image is deprecated as of 2022-01-14 and replaced with Airsonic-Advanced</p> <p> </p>"},{"location":"apps/airsonic/#description","title":"Description","text":"<p>Airsonic is a free, web-based media streamer, providing ubiquitous access to your music. Use it to share your music with friends, or to listen to your own music while at work. You can stream to multiple players simultaneously, for instance to one player in your kitchen and another in your living room.</p>"},{"location":"apps/airsonic/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/airsonicadvanced/","title":"Airsonic Advanced","text":""},{"location":"apps/airsonicadvanced/#description","title":"Description","text":"<p>Airsonic Advanced is a more modern implementation of the Airsonic fork with several key performance and feature enhancements. It adds and supersedes several features in Airsonic.</p>"},{"location":"apps/airsonicadvanced/#installsetup","title":"Install/Setup","text":"<p>Please refer to the container Application Setup documentation. Note that upgrading from Airsonic to Airsonic-Advanced is not officially supported, however it may work. Be sure to backup your config folder before attempting an upgrade. After making a backup, you may be able to copy your Airsonic config to the Airsonic-Advanced config folder, and see if the container logs report any issues.</p>"},{"location":"apps/amd/","title":"AMD","text":""},{"location":"apps/amd/#description","title":"Description","text":"<p>Automatic Music Downloader (AMD) is a Lidarr companion script to automatically download music for Lidarr.</p>"},{"location":"apps/amd/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/apcupsd/","title":"Apcupsd","text":""},{"location":"apps/apcupsd/#description","title":"Description","text":"<p>Apcupsd is a dockerized Python script that will send data from apcupsd to influxdb. You can then visualize the influxdb data in Grafana/Prometheus.</p>"},{"location":"apps/apcupsd/#installsetup","title":"Install/Setup","text":"<p>First you need to install <code>apcupsd</code> on your host. The command will vary depending on what Linux OS you are using. After you install <code>apcupsd</code> on your host, there are some changes that need to take place in your <code>apcupsd.conf</code> file. Again, the location of this file varies by OS, however, for Ubuntu based systems you can find this file in <code>/etc/apcupsd/</code>.</p> <p>By default <code>acpupsd</code> it is set to listen on <code>127.0.0.1</code>. DockSTARTer (DS) does not run containers on <code>host</code> mode so your container will not be able to communicate with your <code>apcupsd</code> service. You need to open the <code>apcupsd.conf</code> file and search for <code>NISIP</code>. You need to change the IP address listed there to your local IP. Once you do this, you need to restart your <code>apcupsd</code> service so new settings take place.</p> <p>The docker image DS uses makes uses of <code>NOMPOWER</code> on your UPS. If your UPS does not have <code>NOMPOWER</code>, you will need to add an override to your existing DS installation and set a new environment variable called <code>WATTS</code> under <code>environment</code> which will need to equal the rated max power for your UPS, e.g: <code>1000</code>. To find whether your UPS has <code>NOMPOWER</code> or not, you can run <code>apcaccess | grep \"NOMPOWER\"</code>.</p> <p>Here is a great guide for exporting the influxdb data to Grafana. Just scroll down to the <code>UPS Dashboard</code> bit.</p>"},{"location":"apps/apprise/","title":"Apprise","text":""},{"location":"apps/apprise/#description","title":"Description","text":"<p>Apprise is push notifications that work with just about every platform!</p> <p>Apprise API is a lightweight REST framework that wraps the Apprise Notification Library.</p> <p>This container runs Apprise API which allows you to send apprise notifications.</p>"},{"location":"apps/audiobookshelf/","title":"Audiobookshelf","text":""},{"location":"apps/audiobookshelf/#description","title":"Description","text":"<p>Audiobookshelf is a self-hosted audiobook and podcast server.</p>"},{"location":"apps/audiobookshelf/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/autobrr/","title":"autobrr","text":""},{"location":"apps/autobrr/#description","title":"Description","text":"<p>autobrr is the modern download automation tool for torrents and usenet. With inspiration and ideas from tools like trackarr, autodl-irssi and flexget we built one tool that can do it all, and then some.</p>"},{"location":"apps/autobrr/#installsetup","title":"Install/Setup","text":"<p>When installing the autobrr container, the installer will install under the <code>appdata</code> directory as the root user and you will see errors as such:</p> <p>error creating file: \"open /config/config.toml: permission denied\"</p> <p>However once it is installed you can change the owner/group of it to whatever is required. Run the following command to fix it:</p> <pre><code>sudo chown -R $USER:$USER ~/.config/appdata/autobrr\n</code></pre> <p>Restart your container by running:</p> <pre><code>docker restart autobrr\n</code></pre> <p>For other issues please refer to the container Application Setup documentation.</p>"},{"location":"apps/azuracast/","title":"AzuraCast","text":""},{"location":"apps/azuracast/#description","title":"Description","text":"<p>AzuraCast is a free and open-source self-hosted web radio management suite that includes the full suite of software needed to build, manage and broadcast a web radio station. Out of the box, it includes a rich web interface, an AutoDJ powered by Liquidsoap, and Icecast to serve broadcasts to listeners.</p>"},{"location":"apps/azuracast/#installsetup","title":"Install/Setup","text":"<p>After your first setup, you can continue the setup process by visiting your server's public-facing IP address at the port(s) configured for AzuraCast to listen to.</p> <p>By default, station storage, asset uploads, and backups are stored in your configured storage location. It is recommended to take advantage of the internal backup function before making major changes to your station or upgrading the software to the latest version.</p> <p>If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/bazarr/","title":"Bazarr","text":""},{"location":"apps/bazarr/#description","title":"Description","text":"<p>Bazarr is a companion application to Sonarr and Radarr. It can manage and download subtitles based on your requirements. You define your preferences by TV show or movie and Bazarr takes care of everything for you.</p>"},{"location":"apps/bazarr/#installsetup","title":"Install/Setup","text":"<p>By default, the DockSTARTer configuration of Bazarr will map to the following volumes:</p> <pre><code>- ${DOCKER_VOLUME_STORAGE}:/storage\n</code></pre> <p>If you have any media outside of those locations, you'll need to create an override using override specifically for those volumes.</p>"},{"location":"apps/beets/","title":"Beets","text":""},{"location":"apps/beets/#description","title":"Description","text":"<p>Beets is a music library manager and not, for the most part, a music player. It does include a simple player plugin and an experimental Web-based player, but it generally leaves actual sound-reproduction to specialized tools.</p>"},{"location":"apps/beets/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/bitwarden/","title":"Bitwarden","text":""},{"location":"apps/bitwarden/#description","title":"Description","text":"<p>Bitwarden is a free and open-source password management service that stores sensitive information such as website credentials in an encrypted vault.</p> <p>Vaultwarden is an alternative implementation of the Bitwarden server API written in Rust and compatible with upstream upstream Bitwarden clients, perfect for self-hosted deployment where running the official resource-heavy service might not be ideal.</p> <p>DockSTARTer uses the Vaultwarden image to create a Bitwarden container.</p>"},{"location":"apps/bitwarden/#installsetup","title":"Install/Setup","text":"<p>When installing the Bitwarden container, the installer will install under <code>appdata</code> directory as the root user, however once it is installed you can change the owner/group of it to whatever is required</p> <p>Run the below command from a terminal to change the permissions if required:</p> <pre><code>sudo chown -R $USER:$USER ~/.config/appdata/bitwarden\n</code></pre> <p>Restart your container by running:</p> <pre><code>docker restart bitwarden\n</code></pre> <p>Having the owner group change will allow you to edit the files if required without running into permission issues.</p>"},{"location":"apps/booksonic/","title":"Booksonic","text":""},{"location":"apps/booksonic/#description","title":"Description","text":"<p>Booksonic is a server and an app for streaming your audiobooks to any pc or android phone. Most of the functionality is also available on other platforms that have apps for subsonic.</p>"},{"location":"apps/booksonic/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/booksonicair/","title":"Booksonic","text":""},{"location":"apps/booksonicair/#description","title":"Description","text":"<p>Booksonic is a server and an app for streaming your audiobooks to any pc or android phone. Most of the functionality is also available on other platforms that have apps for subsonic.</p>"},{"location":"apps/booksonicair/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/bookstack/","title":"BookStack","text":""},{"location":"apps/bookstack/#description","title":"Description","text":"<p>BookStack is a free and open source Wiki designed for creating beautiful documentation. Feauturing a simple, but powerful WYSIWYG editor it allows for teams to create detailed and useful documentation with ease.</p>"},{"location":"apps/bookstack/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/calibre/","title":"Calibre","text":""},{"location":"apps/calibre/#description","title":"Description","text":"<p>Calibre is a powerful and easy to use e-book manager.</p>"},{"location":"apps/calibre/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/calibreweb/","title":"Calibre-Web","text":""},{"location":"apps/calibreweb/#description","title":"Description","text":"<p>Calibre-web is a web app providing a clean interface for browsing, reading and downloading eBooks using an existing Calibre database. It is also possible to integrate google drive and edit metadata and your calibre library through the app itself.</p>"},{"location":"apps/calibreweb/#installsetup","title":"Install/Setup","text":"<p>The Calibre-Web docker is only a web front end to the actual Calibre application/database itself. You still need a Calibre metadata.db file for Calibre Web to function. To get this, you have to install Calibre somewhere and you can move the metadata.db file into your /storage folder.</p>"},{"location":"apps/cloudcmd/","title":"Cloud Commander","text":""},{"location":"apps/cloudcmd/#description","title":"Description","text":"<p>Cloud Commander is a file manager for the web. It includes a command-line console and a text editor. Cloud Commander helps you manage your server and work with files, directories and programs in a web browser from any computer, mobile or tablet.</p>"},{"location":"apps/cloudcmd/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/cloudflareddns/","title":"CloudFlare DDNS","text":""},{"location":"apps/cloudflareddns/#description","title":"Description","text":"<p>CloudFlareDDNS is a small Docker image that allows you to use the free CloudFlare DNS Service as a Dynamic DNS Provider (DDNS).</p>"},{"location":"apps/cloudflareddns/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/codeserver/","title":"Codeserver","text":""},{"location":"apps/codeserver/#description","title":"Description","text":"<p>Code-server is VS Code running on a remote server, accessible through the browser.</p>"},{"location":"apps/codeserver/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/couchpotato/","title":"CouchPotato","text":""},{"location":"apps/couchpotato/#deprecated","title":"DEPRECATED","text":"<p>DEPRECATION NOTICE: This image is deprecated as of 2023-09-20.</p> <p> </p>"},{"location":"apps/couchpotato/#description","title":"Description","text":"<p>CouchPotato is an automatic NZB and torrent downloader. You can keep a movies <code>I Want</code> list and it will search for NZBs/torrents of these movies every X hours. Once a movie is found, it will send it to SABnzbd or download the torrent to a specified directory.</p>"},{"location":"apps/couchpotato/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/crossseed/","title":"crossseed","text":""},{"location":"apps/crossseed/#description","title":"Description","text":"<p>cross-seed can inject the torrents it finds directly into your torrent client. Currently, the supported clients are</p> <ul> <li>rTorrent</li> <li>qBittorrent</li> <li>Transmission</li> <li>Deluge</li> </ul> <p>If your client isn't supported, <code>cross-seed</code> will download a bunch of torrent files to a folder you specify. After that, I recommend using AutoTorrent2 to do the last-mile delivery into your client.</p>"},{"location":"apps/crossseed/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/dasshio/","title":"Dasshio","text":""},{"location":"apps/dasshio/#description","title":"Description","text":"<p>Dasshio is a Hass.io add-on to easily use Amazon Dash Buttons with Home Assistant.</p>"},{"location":"apps/dasshio/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/ddclient/","title":"Ddclient","text":""},{"location":"apps/ddclient/#description","title":"Description","text":"<p>DDclient is a Perl client used to update dynamic DNS entries for accounts on a Dynamic DNS Network Service Provider. It was originally written by Paul Burry and is now mostly by wimpunk. It has the capability to update more than just dyndns and it can fetch your WAN-ipaddress in a few different ways.</p>"},{"location":"apps/ddclient/#installsetup","title":"Install/Setup","text":"<p>Edit the included config to uncomment this line:</p> <pre><code>use=web, web=checkip.dyndns.org/, web-skip='IP Address' # found after IP Address\n</code></pre> <p>Then find your service of choice in the file and fill out the info as described. CloudFlare is recommended.</p>"},{"location":"apps/deemix/","title":"Deemix","text":""},{"location":"apps/deemix/#description","title":"Description","text":"<p>Deemix is a deezer downloader built from the ashes of Deezloader Remix. The base library (or core) can be used as a stand alone CLI app or implemented in an UI using the API.</p>"},{"location":"apps/deemix/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/deluge/","title":"Deluge","text":""},{"location":"apps/deluge/#description","title":"Description","text":"<p>Deluge is a lightweight, Free Software, cross-platform BitTorrent client.</p>"},{"location":"apps/deluge/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/delugevpn/","title":"DelugeVPN","text":""},{"location":"apps/delugevpn/#description","title":"Description","text":"<p>DelugeVPN is a Docker build script for Arch Linux base with Deluge, Privoxy and OpenVPN all included in one image.</p> <p>The support forum for DelugeVPN is located here.</p>"},{"location":"apps/delugevpn/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/delugevpn/#delugevpn-webui-access","title":"DelugeVPN WebUI Access","text":"<p>If you're attempting to get access to the DelugeVPN WebUI remotely outside of your home network using SWAG you must follow the steps outlined in VPN Information.</p>"},{"location":"apps/doplarr/","title":"Doplarr","text":""},{"location":"apps/doplarr/#description","title":"Description","text":"<p>Doplarr is an *arr Request Bot for Discord</p>"},{"location":"apps/doplarr/#installsetup","title":"Install/Setup","text":"<p>Full configuration instructions are available on the Doplarr website. The Discord instructions are required. From there, either set the Sonarr/Radarr variables or the Overseerr variables.</p>"},{"location":"apps/dozzle/","title":"Dozzle","text":""},{"location":"apps/dozzle/#description","title":"Description","text":"<p>Dozzle is a simple, lightweight application that provides you with a web based interface to monitor your Docker container logs live. It doesn\u2019t store log information, it is for live monitoring of your container logs only.</p>"},{"location":"apps/dozzle/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/dozzle/#dozzles-security","title":"Dozzle's Security","text":"<p>Dozzle doesn't support authentication out of the box.</p> <p>We do not recommend you expose dozzle to the outside world without some sort of protection in front of it such as Organizr's Server Auth.</p>"},{"location":"apps/duckdns/","title":"DuckDNS","text":""},{"location":"apps/duckdns/#description","title":"Description","text":"<p>DuckDNS is a free service which will point a DNS (sub domains of duckdns.org) to an IP of your choice. The service is completely free, and doesn't require reactivation or forum posts to maintain its existence.</p>"},{"location":"apps/duckdns/#installsetup","title":"Install/Setup","text":"<p>When installing the DuckDNS container, the you will be prompted for your subdomain and token as part of the variables setup. To get that token, you need to go to the DuckDNS website, register your subdomain(s) and retrieve your token. When the container creates and updates with your subdomain and token, it will then update your IP with the DuckDNS service every 5 minutes.</p>"},{"location":"apps/duplicacy/","title":"Duplicacy","text":""},{"location":"apps/duplicacy/#description","title":"Description","text":"<p>Duplicacy is built on top of a new idea called Lock-Free Deduplication, which works by relying on the basic file system API to manage deduplicated chunks without using any locks. A two-step fossil collection algorithm is devised to solve the fundamental problem of deleting unreferenced chunks under the lock-free condition, making deletion of old backups possible without using a centralized chunk database.</p>"},{"location":"apps/duplicacy/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/duplicati/","title":"Duplicati","text":""},{"location":"apps/duplicati/#description","title":"Description","text":"<p>Duplicati is a backup software solution to store encrypted backups online and works with standard protocols like FTP, SSH, WebDAV as well as popular services like Microsoft OneDrive, Amazon Cloud Drive &amp; S3, Google Drive, box, Mega, hubiC and many others.</p>"},{"location":"apps/duplicati/#installsetup","title":"Install/Setup","text":"<p>If you install Duplicati, you may be wondering what the important folders and files are to backup in case something goes wrong and you want to restore and be back up and running within minutes. Everything regarding DockSTARTer is found in /source like below: (You can exclude <code>.git</code> and <code>.github</code>)</p> <p></p>"},{"location":"apps/emby/","title":"Emby","text":""},{"location":"apps/emby/#description","title":"Description","text":"<p>Emby organizes video, music, live TV, and photos from personal media libraries and streams them to smart TVs, streaming boxes and mobile devices.</p>"},{"location":"apps/emby/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/fail2ban/","title":"Fail2ban","text":""},{"location":"apps/fail2ban/#description","title":"Description","text":"<p>Fail2ban is a daemon to ban hosts that cause multiple authentication errors.</p>"},{"location":"apps/fail2ban/#installsetup","title":"Install/Setup","text":"<p>Please read the Application Setup section of the container documentation.</p> <p>This container runs with special permissions <code>NET_ADMIN</code> and <code>NET_RAW</code> and runs in <code>host</code> network mode by default. These configurations allow Fail2ban to perform bans at the host level, rather than only banning from inside the docker container.</p> <p>This container requires an override to add additional log paths for other applications.</p> <p>Example:</p> <pre><code>services:\n  fail2ban:\n    volumes:\n      - \"${DOCKER_VOLUME_CONFIG}/filebrowser/filebrowser.log:/remotelogs/filebrowser/filebrowser.log:ro\"\n      - \"${DOCKER_VOLUME_CONFIG}/swag/log/nginx:/remotelogs/nginx:ro\"\n</code></pre>"},{"location":"apps/filebot/","title":"FileBot","text":""},{"location":"apps/filebot/#description","title":"Description","text":"<p>FileBot is the ultimate tool for organizing and renaming your Movies, TV Shows and Anime as well as fetching subtitles and artwork. It's smart and just works.</p>"},{"location":"apps/filebot/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/filebrowser/","title":"File Browser","text":""},{"location":"apps/filebrowser/#description","title":"Description","text":"<p>File Browser provides a file managing interface within a specified directory and it can be used to upload, delete, preview, rename and edit your files. It allows the creation of multiple users and each user can have its own directory.</p>"},{"location":"apps/filebrowser/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/fireflyiii/","title":"Firefly III","text":""},{"location":"apps/fireflyiii/#description","title":"Description","text":"<p>Firefly III is a personal finances manager.</p>"},{"location":"apps/fireflyiii/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/flame/","title":"Flame","text":""},{"location":"apps/flame/#description","title":"Description","text":"<p>Flame is self-hosted startpage for your server. Its design is inspired (heavily) by SUI. Flame is very easy to setup and use. With built-in editors, it allows you to setup your very own application hub in no time - no file editing necessary.</p>"},{"location":"apps/flame/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/flaresolverr/","title":"FlareSolverr","text":""},{"location":"apps/flaresolverr/#description","title":"Description","text":"<p>FlareSolverr starts a proxy server and it waits for user requests in an idle state using few resources. When some request arrives, it uses puppeteer with the stealth plugin to create a headless browser (Chrome). It opens the URL with user parameters and waits until the Cloudflare challenge is solved (or timeout). The HTML code and the cookies are sent back to the user, and those cookies can be used to bypass Cloudflare using other HTTP clients.</p>"},{"location":"apps/flaresolverr/#installsetup","title":"Install/Setup","text":""},{"location":"apps/freshrss/","title":"FreshRSS","text":""},{"location":"apps/freshrss/#description","title":"Description","text":"<p>FreshRSS is a free, self-hostable aggregator for RSS feeds.</p>"},{"location":"apps/freshrss/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/gitea/","title":"Gitea","text":""},{"location":"apps/gitea/#description","title":"Description","text":"<p>Gitea is a community managed lightweight code hosting solution written in Go. It is published under the MIT license.</p>"},{"location":"apps/gitea/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/glances/","title":"Glances","text":""},{"location":"apps/glances/#description","title":"Description","text":"<p>Glances is a cross-platform monitoring tool which aims to present a large amount of monitoring information through a curses or Web based interface. The information dynamically adapts depending on the size of the user interface.</p>"},{"location":"apps/glances/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/gluetun/","title":"Gluetun","text":""},{"location":"apps/gluetun/#description","title":"Description","text":"<p>Gluetun is a VPN client in a thin Docker container for multiple VPN providers, written in Go, and using OpenVPN or Wireguard, DNS over TLS, with a few proxy servers built-in.</p>"},{"location":"apps/gluetun/#installsetup","title":"Install/Setup","text":"<p>Check the wiki for the relevant environment variables for your VPN provider.</p>"},{"location":"apps/gluetun/#example","title":"Example","text":"<p><code>.env</code> value to have Transmission use Gluetun</p> <pre><code>TRANSMISSION_NETWORK_MODE=\"container:gluetun\"\n</code></pre>"},{"location":"apps/goaccess/","title":"GoAccess","text":""},{"location":"apps/goaccess/#description","title":"Description","text":"<p>GoAccess is an Alpine linux container which builds GoAccess including GeoIP. It reverse proxies the GoAccess HTML files and websockets through NGINX, allowing GoAccess content to be viewed without any other setup. GoAccess itself is an open source real-time web log analyzer and interactive viewer that runs in a terminal in Linux systems or through your browser. It provides fast and valuable HTTP statistics for system administrators that require a visual server report on the fly.</p>"},{"location":"apps/goaccess/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/grafana/","title":"Grafana","text":""},{"location":"apps/grafana/#description","title":"Description","text":"<p>Grafana is an open-source platform for monitoring and observability. Grafana allows you to query, visualize, alert on and understand your metrics no matter where they are stored.</p>"},{"location":"apps/grafana/#installsetup","title":"Install/Setup","text":"<p>When installing the Grafana container, the installer will install under the <code>appdata</code> directory as the root user and you will see errors as such:</p> <p>mkdir: cannot create directory '/var/lib/grafana/plugins': Permission denied, GF_PATHS_DATA='/var/lib/grafana' is not writable.</p> <p>However once it is installed you can change the owner/group of it to whatever is required. Run the following command to fix it:</p> <pre><code>sudo chown -R $USER:$USER ~/.config/appdata/grafana\n</code></pre> <p>Restart your container by running:</p> <pre><code>docker restart grafana\n</code></pre>"},{"location":"apps/grocy/","title":"Grocy","text":""},{"location":"apps/grocy/#description","title":"Description","text":"<p>Grocy is an ERP system for your kitchen! Cut down on food waste, and manage your chores with this brilliant utility. Keep track of your purchases, how much food you are wasting, what chores need doing and what batteries need charging.</p>"},{"location":"apps/grocy/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/guacamole/","title":"Guacamole","text":""},{"location":"apps/guacamole/#description","title":"Description","text":"<p>Guacamole is a client-less remote desktop gateway. It supports standard protocols like VNC, RDP, and SSH over HTML5.</p>"},{"location":"apps/guacamole/#installsetup","title":"Install/Setup","text":"<p>You can read through a great guide here which will go over how to protect your Guacamole instance if you ever want it to be accessible over the Internet.</p>"},{"location":"apps/h5ai/","title":"H5ai","text":""},{"location":"apps/h5ai/#description","title":"Description","text":"<p>H5ai is a modern file indexer for HTTP web servers with focus on your files. Directories are displayed in a appealing way and browsing them is enhanced by different views, a breadcrumb and a tree overview. Initially h5ai was an acronym for HTML5 Apache Index but now it supports other web servers too. This docker image makes it trivially easy to spin up a webserver and start sharing your files through the web.</p>"},{"location":"apps/h5ai/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/handbrake/","title":"HandBrake","text":""},{"location":"apps/handbrake/#description","title":"Description","text":"<p>HandBrake is a tool for converting video from nearly any format to a selection of modern, widely supported codecs. The GUI of the application is accessed through a modern web browser (no installation or configuration needed on client side) or via any VNC client. A fully automated mode is also available: drop files into a watch folder and let HandBrake process them without any user interaction.</p>"},{"location":"apps/handbrake/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/headphones/","title":"Headphones","text":""},{"location":"apps/headphones/#description","title":"Description","text":"<p>Headphones is an automated music downloader for NZB and Torrent, written in Python. It supports SABnzbd, NZBget, Transmission, \u00b5Torrent and Blackhole.</p>"},{"location":"apps/headphones/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/heimdall/","title":"Heimdall","text":""},{"location":"apps/heimdall/#description","title":"Description","text":"<p>Heimdall is a dashboard for all your web applications. It doesn't need to be limited to applications though, you can add links to anything you like. Heimdall is an elegant solution to organize all your web applications. It\u2019s dedicated to this purpose so you won\u2019t lose your links in a sea of bookmarks.</p>"},{"location":"apps/heimdall/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/heimdall/#reverse-proxy-as-homepage-via-swag","title":"Reverse Proxy as homepage via SWAG","text":"<p>In order to reverse proxy the Heimdall container as your homepage via SWAG you will need to rename the subfolder proxy sample with the following command:</p> <pre><code>cp ~/.config/appdata/swag/nginx/proxy-confs/heimdall.subfolder.conf.sample ~/.config/appdata/swag/nginx/proxy-confs/heimdall.subfolder.conf\n</code></pre> <p>Then edit <code>~/.config/appdata/swag/nginx/site-confs/default</code> to comment out the <code>location / {</code> and <code>location ~ \\.php$ {</code> blocks down to their ending <code>}</code>.</p> <p>Example Before:</p> <pre><code>    location / {\n        try_files $uri $uri/ /index.html /index.php?$args =404;\n    }\n\n    location ~ \\.php$ {\n        fastcgi_split_path_info ^(.+\\.php)(/.+)$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include /etc/nginx/fastcgi_params;\n    }\n</code></pre> <p>Example After:</p> <pre><code>    # location / {\n    #     try_files $uri $uri/ /index.html /index.php?$args =404;\n    # }\n\n    # location ~ \\.php$ {\n    #     fastcgi_split_path_info ^(.+\\.php)(/.+)$;\n    #     fastcgi_pass 127.0.0.1:9000;\n    #     fastcgi_index index.php;\n    #     include /etc/nginx/fastcgi_params;\n    # }\n</code></pre> <p>Lastly, restart the SWAG container:</p> <pre><code>docker restart swag\n</code></pre>"},{"location":"apps/heimdall/#pre-modified-default-site-conf","title":"Pre-modified default site-conf","text":"<p>This example is based on the default site config included in SWAG found here. It has been modified to remove a lot of example comments and allow Heimdall to take the place of your home page and replace the \"Welcome to our server\" page. This example may not be up to date with the most recent changes from upstream.</p> <pre><code>## Version 2020/05/23 - Changelog: https://github.com/linuxserver/docker-swag/commits/master/root/defaults/default\n\n# redirect all traffic to https\nserver {\n    listen 80 default_server;\n    listen [::]:80 default_server;\n    server_name _;\n    return 301 https://$host$request_uri;\n}\n\n# main server block\nserver {\n    listen 443 ssl http2 default_server;\n    listen [::]:443 ssl http2 default_server;\n\n    root /config/www;\n    index index.html index.htm index.php;\n\n    server_name _;\n\n    # enable subfolder method reverse proxy confs\n    include /config/nginx/proxy-confs/*.subfolder.conf;\n\n    # all ssl related config moved to ssl.conf\n    include /config/nginx/ssl.conf;\n\n    # enable for ldap auth\n    #include /config/nginx/ldap.conf;\n\n    # enable for Authelia\n    #include /config/nginx/authelia-server.conf;\n\n    # enable for geo blocking\n    # See /config/nginx/geoip2.conf for more information.\n    #if ($allowed_country = no) {\n    #return 444;\n    #}\n\n    client_max_body_size 0;\n\n    # location / {\n    #     try_files $uri $uri/ /index.html /index.php?$args =404;\n    # }\n\n    # location ~ \\.php$ {\n    #     fastcgi_split_path_info ^(.+\\.php)(/.+)$;\n    #     fastcgi_pass 127.0.0.1:9000;\n    #     fastcgi_index index.php;\n    #     include /etc/nginx/fastcgi_params;\n    # }\n\n}\n\n# enable subdomain method reverse proxy confs\ninclude /config/nginx/proxy-confs/*.subdomain.conf;\n# enable proxy cache for auth\nproxy_cache_path cache/ keys_zone=auth_cache:10m;\n</code></pre>"},{"location":"apps/homeassistant/","title":"Home Assistant","text":""},{"location":"apps/homeassistant/#description","title":"Description","text":"<p>Home Assistant is a home automation platform running on Python 3 that puts local control and privacy first. It is able to track and control all devices at home and offer a platform for automating control. Powered by a worldwide community of tinkerers and DIY enthusiasts. Perfect to run on a Raspberry Pi or a local server.</p>"},{"location":"apps/homeassistant/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/homeassistant/#suggestions","title":"Suggestions","text":"<p>You may want to create an override for <code>homeassistant</code> with the following if you are receiving a warning every 10 seconds for:</p> <p>device tracking of self-signed Unifi Controller SSL certificated.</p> <pre><code>environment:\n  - PYTHONWARNINGS=\"ignore:Unverified HTTPS request\"\n</code></pre> <p>Reference: Endless InsecureRequestWarning errors with UniFi</p> <p>To make sure your Home Assistant instance can see your local network devices you might want to set your network mode to <code>host</code> on your <code>.docker/compose/.env</code> file.</p> <pre><code>HOMEASSISTANT__NETWORK_MODE=host\n</code></pre>"},{"location":"apps/homebridge/","title":"Homebridge","text":""},{"location":"apps/homebridge/#description","title":"Description","text":"<p>Homebridge is a lightweight NodeJS server you can run on your home network that emulates the iOS HomeKit API. It supports Plugins, which are community-contributed modules that provide a basic bridge from HomeKit to various 3rd-party APIs provided by manufacturers of \"smart home\" devices.</p>"},{"location":"apps/homebridge/#installsetup","title":"Install/Setup","text":"<p>Refer to the following pages for detailed instructions:</p> <ul> <li>Homebridge</li> <li>docker-homebridge GitHub page</li> </ul>"},{"location":"apps/homepage/","title":"Homepage","text":""},{"location":"apps/homepage/#description","title":"Description","text":"<p>Homepage is a modern, fully static, fast, secure fully proxied, highly customizable application dashboard with integrations for over 100 services and translations into multiple languages. Easily configured via YAML files or through docker label discovery. .</p>"},{"location":"apps/homepage/#installsetup","title":"Install/Setup","text":"<p>Refer to the following pages for detailed instructions:</p> <ul> <li>Homepage Docker Installation</li> <li>Homepage Configs</li> </ul> <p>Docker integration is enabled in the setting label by default, you can disable by remove the <code>HOMEPAGE_DOCKER_INTERGRATE</code> environment variable.</p>"},{"location":"apps/homepage/#using-environment-secrets","title":"Using Environment Secrets","text":""},{"location":"apps/homepage/#you-can-also-include-environment-variables-in-your-config-files-to-protect-sensitive-information","title":"You can also include environment variables in your config files to protect sensitive information","text":"<p>Note:</p> <ul> <li>Environment variables must start with HOMEPAGEVAR or HOMEPAGEFILE</li> <li>The value of env var HOMEPAGE_VAR_XXX will replace {{HOMEPAGE_VAR_XXX}} in any config</li> <li>The value of env var HOMEPAGE_FILE_XXX must be a file path, the contents of which will be used to replace {{HOMEPAGE_FILE_XXX}} in any config</li> </ul>"},{"location":"apps/homer/","title":"Homer","text":""},{"location":"apps/homer/#description","title":"Description","text":"<p>Homer is a dead simple static HOMepage for your servER to keep your services on hand, from a simple yaml configuration file.</p>"},{"location":"apps/homer/#installsetup","title":"Install/Setup","text":"<p>Be sure to read the app specific documentation on github as the environment variables below are an extension of those explained in the documentation.</p> <p>Note that your configuration files and homer assets are located in <code>${DOCKER_VOLUME_CONFIG}/homer</code></p>"},{"location":"apps/homer/#environment-variables","title":"Environment Variables","text":""},{"location":"apps/homer/#env_fileshomerenv","title":"env_files/homer.env","text":""},{"location":"apps/homer/#init_assets","title":"INIT_ASSETS","text":"<p><code>1</code> (default) Install example configuration file &amp; assets (favicons, ...) to help you get started.</p> <p><code>0</code> Don't install assets. Use existing files. This is the suggested value after you first launch homer and assets are installed.</p>"},{"location":"apps/homer/#subfolder","title":"SUBFOLDER","text":"<p>(default: <code>''</code>) If you would like to host Homer in a subfolder, (ex: <code>http://my-domain/homer</code>), set this to the subfolder path (ex /homer).</p>"},{"location":"apps/htpcmanager/","title":"HTPC Manager","text":""},{"location":"apps/htpcmanager/#description","title":"Description","text":"<p>HTPC Manager is python based web application to manage the software on your HTPC. HTPC Manager combines all your favorite software into one slick interface.</p>"},{"location":"apps/htpcmanager/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/httpserver/","title":"HTTP Server","text":""},{"location":"apps/httpserver/#description","title":"Description","text":"<p>http-server is a simple binary to provide a static http server from a given folder.</p>"},{"location":"apps/httpserver/#installsetup","title":"Install/Setup","text":""},{"location":"apps/httpserver/#env_fileshttpserverenv","title":"env_files/httpserver.env","text":"<p>The variable <code>FILE_SERVER_COLOR_SET</code> can be modified to use any of the colors listed on here.</p> <p>Whenever you select a color combination, you will get a link at the bottom of the page. The link will include the color towards the end of the link:</p> <p><code>&lt;link rel=\"stylesheet\" href=\"https://code.getmdl.io/1.3.0/material.indigo-pink.min.css\" /&gt;</code></p> <p>What you care about is the bit that says <code>indigo-red</code> or <code>indigo-pink</code>. That's the color you will set in variable and run the following command to apply any changes:</p> <pre><code>ds -c up httpserver\n</code></pre>"},{"location":"apps/huginn/","title":"Huginn","text":""},{"location":"apps/huginn/#description","title":"Description","text":"<p>Huginn is a system for building agents that perform automated tasks for you online. They can read the web, watch for events, and take actions on your behalf. Huginn's Agents create and consume events, propagating them along a directed graph. Think of it as a hackable version of IFTTT or Zapier on your own server. You always know who has your data. You do.</p>"},{"location":"apps/huginn/#installsetup","title":"Install/Setup","text":"<p>Huginn is extremely configurable. By default DS only includes variables for the database. The container will run the default variables that are included in their <code>.env.example</code> in the container. However, you can pick and choose which environment variables you want to configure and include them in an override.</p>"},{"location":"apps/influxdb/","title":"InfluxDB","text":""},{"location":"apps/influxdb/#description","title":"Description","text":"<p>InfluxDB is an open source time series platform. This includes APIs for storing and querying data, processing it in the background for ETL or monitoring and alerting purposes, user dashboards, and visualizing and exploring the data and more.</p>"},{"location":"apps/influxdb/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/jackett/","title":"Jackett","text":""},{"location":"apps/jackett/#description","title":"Description","text":"<p>Jackett works as a proxy server: it translates queries from apps (Sonarr, SickRage, CouchPotato, Mylar, etc) into tracker-site-specific http queries, parses the html response, then sends results back to the requesting software. This allows for getting recent uploads (like RSS) and performing searches. Jackett is a single repository of maintained indexer scraping &amp; translation logic - removing the burden from other apps.</p>"},{"location":"apps/jackett/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/jackett/#configuring-vpn-tunnel","title":"Configuring VPN tunnel","text":"<p>When attempting to use private trackers the address which requested the .torrent file must also be the address that initiates the download. Often this is an issue if you have your torrent downloader behind a VPN while the Jackett instance is not behind it.</p> <p>To solve this issue:</p> <ul> <li>Enable PrivoxyVPN.</li> <li>Inside the Jackett webui, set proxy type to <code>HTTP</code></li> <li>Set Proxy URL to <code>servicename</code> example: <code>privoxyvpn</code></li> <li>Set Proxy port to <code>8118</code></li> </ul>"},{"location":"apps/jdownloader2/","title":"JDownloader2","text":""},{"location":"apps/jdownloader2/#description","title":"Description","text":"<p>JDownloader 2 is a free, open-source download management tool with a huge community of developers that makes downloading as easy and fast as it should be. Users can start, stop or pause downloads, set bandwith limitations, auto-extract archives and much more. It's an easy-to-extend framework that can save hours of your valuable time every day!</p>"},{"location":"apps/jdownloader2/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/jellyfin/","title":"Jellyfin","text":""},{"location":"apps/jellyfin/#description","title":"Description","text":"<p>Jellyfin is a free software media system that puts you in control of managing and streaming your media. It is an alternative to the proprietary Emby and Plex, to provide media from a dedicated server to end-user devices via multiple apps. Jellyfin is descended from Emby's 3.5.2 release and ported to the .NET Core framework to enable full cross-platform support. There are no strings attached, no premium licenses or features, and no hidden agendas: just a team who wants to build something better and work together to achieve it.</p>"},{"location":"apps/jellyfin/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/jellyseerr/","title":"Jellyseerr","text":""},{"location":"apps/jellyseerr/#description","title":"Description","text":"<p>Jellyseerr is a free and open source software application for managing requests for your media library. It is a fork of Overseerr built to bring additional support for Jellyfin &amp; Emby media servers!</p>"},{"location":"apps/jellyseerr/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/jfago/","title":"jfa-go","text":""},{"location":"apps/jfago/#description","title":"Description","text":"<p>jfa-go is a user management app for Jellyfin that provides invite-based account creation as well as other features that make one's instance much easier to manage.</p>"},{"location":"apps/jfago/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/kanboard/","title":"Kanboard","text":""},{"location":"apps/kanboard/#description","title":"Description","text":"<p>Kanboard is a free and open source Kanban project management software.</p>"},{"location":"apps/kanboard/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/kitana/","title":"Kitana","text":""},{"location":"apps/kitana/#description","title":"Description","text":"<p>Kitana is a responsive Plex plugin web frontend.</p>"},{"location":"apps/kitana/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/kiwixserve/","title":"Kiwix-Serve","text":""},{"location":"apps/kiwixserve/#description","title":"Description","text":"<p>Kiwix lets you access free knowledge \u2013 even offline. Store Wikipedia or any website on your mobile phone or computer, easily.</p>"},{"location":"apps/kiwixserve/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/komga/","title":"Komga","text":""},{"location":"apps/komga/#description","title":"Description","text":"<p>Komga is a media server for your comics, mangas, BDs and magazines.</p>"},{"location":"apps/komga/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/lazylibrarian/","title":"LazyLibrarian","text":""},{"location":"apps/lazylibrarian/#description","title":"Description","text":"<p>LazyLibrarian is a program to follow authors and grab metadata for all your digital reading needs. It uses a combination of Goodreads Librarything and optionally GoogleBooks as sources for author info and book info. This container is based on the DobyTang fork.</p>"},{"location":"apps/lazylibrarian/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/ldapauth/","title":"LDAP-Auth","text":"<p>Ldap-auth software is for authenticating users who request protected resources from servers proxied by nginx. It includes a daemon (ldap-auth) that communicates with an authentication server, and a webserver daemon that generates an authentication cookie based on the user\u2019s credentials. The daemons are written in Python for use with a Lightweight Directory Access Protocol (LDAP) authentication server (OpenLDAP or Microsoft Windows Active Directory 2003 and 2012).</p>"},{"location":"apps/ldapauth/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/librespeed/","title":"LibreSpeed","text":""},{"location":"apps/librespeed/#description","title":"Description","text":"<p>Librespeed is a very lightweight Speedtest implemented in Javascript, using XMLHttpRequest and Web Workers. No Flash, No Java, No Websocket, No Bullshit.</p>"},{"location":"apps/librespeed/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/lidarr/","title":"Lidarr","text":""},{"location":"apps/lidarr/#description","title":"Description","text":"<p>Lidarr is a music collection manager for Usenet and BitTorrent users. It can monitor multiple RSS feeds for new tracks from your favorite artists and will grab, sort and rename them. It can also be configured to automatically upgrade the quality of files already downloaded when a better quality format becomes available.</p>"},{"location":"apps/lidarr/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/limnoria/","title":"Limnoria","text":""},{"location":"apps/limnoria/#description","title":"Description","text":"<p>Limnoria a robust, full-featured, and user/programmer-friendly Python IRC bot, with many existing plugins. Successor of the well-known Supybot.</p>"},{"location":"apps/limnoria/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/logarr/","title":"Logarr","text":""},{"location":"apps/logarr/#description","title":"Description","text":"<p>Logarr is a self-hosted, single-page, log consolidation tool written in PHP.</p>"},{"location":"apps/logarr/#installsetup","title":"Install/Setup","text":"<p>Logarr configuration has sharing to the logs enabled by default. From within the Logarr container, this is accessible via the <code>/var/log/logarrlogs</code> path. Which is mapped to your <code>~/.config/appdata</code> path of your host machine.</p> <p>For Logarr you will need to edit the <code>config.php</code> file to point to the correct log files. This file is located in the <code>~/.config/appdata/logarr/www/logarr/assets/</code> folder of your host machine.</p> <p>Edit the included config to change these lines:</p> <pre><code>    \"Sonarr\" =&gt; '/var/log/logarrlogs/sonarr/logs/sonarr.txt',\n    \"Radarr\" =&gt; '/var/log/logarrlogs/radarr/logs/radarr.txt',\n</code></pre>"},{"location":"apps/logitechmediaserver/","title":"Logitech Media Server","text":""},{"location":"apps/logitechmediaserver/#description","title":"Description","text":"<p>Logitech Media Server (aka. LMS, fka. SlimServer, SqueezeCenter, SqueezeboxServer, SliMP3) is the server software that powers audio players from Logitech (formerly known as SlimDevices), including Squeezebox 3rd Generation, Squeezebox Boom, Squeezebox Receiver, Transporter, Squeezebox2, Squeezebox and SLIMP3, and many software emulators like Squeezelite and SqueezePlay. With the help of many plugins, Logitech Media Server can stream not only your local music collection, but content from many music services and internet radio stations to your players.</p>"},{"location":"apps/logitechmediaserver/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/lyrionmusicserver/","title":"Logitech Media Server","text":""},{"location":"apps/lyrionmusicserver/#description","title":"Description","text":"<p>Lyrion Music Server Lyrion Music Server (formerly Logitech Media Server) is open-source server software which controls a wide range of Squeezebox audio players. Lyrion can stream your local music collection, internet radio stations, and content from many streaming services (with and without subscriptions).</p>"},{"location":"apps/lyrionmusicserver/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/maintainerr/","title":"Maintainerr","text":""},{"location":"apps/maintainerr/#description","title":"Description","text":"<p>Maintainerr is an automated media management tool designed to help users free up storage space on their media servers by identifying and removing unwatched or unwanted content. It integrates with platforms like Plex, Overseerr, Radarr, Sonarr, Jellyseerr, and Tautulli, allowing users to set customizable rules for detecting media that is taking up space but not being used. Maintainerr can automatically create collections of such media, display them on the Plex home screen for a specified period before deletion, and then remove or unmonitor the files from your server. The application aims to simplify server maintenance by automating the cleanup process, making it easy to reclaim disk space without manual intervention.</p>"},{"location":"apps/maintainerr/#installsetup","title":"Install/Setup","text":"<p>When installing the Maintainerr container, it will create its data directory in <code>appdata</code> as the root user. If you see errors like:</p> <p>Could not create or access (files in) the data directory. Please make sure the necessary permissions are set</p> <p>You will need to change the ownership of the directory to your user account. To do this, run:</p> <pre><code>sudo chown -R $USER:$USER ~/.config/appdata/Maintainerr\n</code></pre> <p>Restart your container by running:</p> <pre><code>docker restart Maintainerr\n</code></pre> <p>Setting the correct ownership will let you edit the files as needed and will help ensure the application runs properly, without permission issues.</p> <p>If you need further assistance setting up this application, please visit the official GitHub repository or our support page.</p>"},{"location":"apps/makemkv/","title":"MakeMKV","text":""},{"location":"apps/makemkv/#description","title":"Description","text":"<p>MakeMKV is your one-click solution to convert video that you own into free and patents-unencumbered format that can be played everywhere. MakeMKV is a format converter, otherwise called \"transcoder\". It converts the video clips from proprietary (and usually encrypted) disc into a set of MKV files, preserving most information but not changing it in any way. The MKV format can store multiple video/audio tracks with all meta-information and preserve chapters. There are many players that can play MKV files nearly on all platforms, and there are tools to convert MKV files to many formats, including DVD and Blu-ray discs.</p>"},{"location":"apps/makemkv/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/mariadb/","title":"MariaDB","text":""},{"location":"apps/mariadb/#description","title":"Description","text":"<p>MariaDB is one of the most popular database servers. Made by the original developers of MySQL.</p>"},{"location":"apps/mariadb/#installsetup","title":"Install/Setup","text":"<p>You can create and manage databases directly from inside the MariaDB container but we recommend you use phpMyAdmin to manage your databases.</p> <p>We heavily recommend that if you spin up a container that requires a database you create a user for that container in phpMyAdmin. You should NEVER use the root account for anything other than database management.</p> <p>Note: The root password cannot be longer than 32 characters (Source). We also noticed that phpMyAdmin will not work with complex passwords longer than 16 characters. It seems to only support uppercase, lowercase and numbers.</p>"},{"location":"apps/medusa/","title":"Medusa","text":""},{"location":"apps/medusa/#description","title":"Description","text":"<p>Medusa is an automatic Video Library Manager for TV Shows. It watches for new episodes of your favorite shows, and when they are posted it does its magic.</p>"},{"location":"apps/medusa/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/minecraftbedrockserver/","title":"Minecraft Bedrock Server","text":""},{"location":"apps/minecraftbedrockserver/#description","title":"Description","text":"<p>Minecraft Bedrock Server will automatically download the latest stable version at startup. Bedrock Dedicated Server is official server software to host your own server for Minecraft (Bedrock).</p>"},{"location":"apps/minecraftbedrockserver/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/minecraftserver/","title":"Minecraft Server","text":""},{"location":"apps/minecraftserver/#description","title":"Description","text":"<p>Minecraft Server will automatically download the latest stable version at startup. You can also run/upgrade to any specific version or the latest snapshot.</p>"},{"location":"apps/minecraftserver/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/monitorr/","title":"Monitorr","text":""},{"location":"apps/monitorr/#description","title":"Description","text":"<p>Monitorr is a webfront to live display the status of any webapp or service.</p>"},{"location":"apps/monitorr/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/mosquitto/","title":"Mosquitto","text":""},{"location":"apps/mosquitto/#description","title":"Description","text":"<p>Mosquitto is an open source implementation of a server for version 5.0, 3.1.1, and 3.1 of the MQTT protocol. It also includes a C and C++ client library, and the <code>mosquitto_pub</code> and <code>mosquitto_sub</code> utilities for publishing and subscribing.</p>"},{"location":"apps/mosquitto/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/moviematch/","title":"MovieMatch","text":""},{"location":"apps/moviematch/#description","title":"Description","text":"<p>Have you ever spent longer deciding on a movie than it'd take to just watch a random movie? This is an app that helps you and your friends pick a movie to watch from a Plex server.</p>"},{"location":"apps/moviematch/#installsetup","title":"Install/Setup","text":""},{"location":"apps/murmur/","title":"Murmur","text":""},{"location":"apps/murmur/#description","title":"Description","text":"<p>Murmur is a VoIP server for Mumble. It is an open-source application that is similar to programs such as Ventrilo or TeamSpeak.</p>"},{"location":"apps/murmur/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/murmur/#superuser-password","title":"SuperUser Password","text":"<p>The default user on a Murmur server is called 'SuperUser'. An initial password is generated for this user on first run, and you can find it by looking at the Docker logs for the Murmur container. It will be in a line that looks like <code>Password for 'SuperUser' set to 'something'</code>. You can use this password to login.</p> <p>It is possible to set a specific SuperUser password by using the <code>MURMUR_SUPW</code> environment variable in <code>env_files/murmer.env</code>, but due to a quirk with the way Murmur is implemented, if you set this SuperUser password variable, the container will simply update the SuperUser password and exit. As such, this variable needs to be unset to start Murmur normally.</p>"},{"location":"apps/muximux/","title":"Muximux","text":""},{"location":"apps/muximux/#description","title":"Description","text":"<p>Muximux is a lightweight portal to view &amp; manage your HTPC apps without having to run anything more than a PHP enabled webserver. With Muximux you don't need to keep multiple tabs open, or bookmark the URL to all of your apps.</p>"},{"location":"apps/muximux/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/mylar3/","title":"Mylar3","text":""},{"location":"apps/mylar3/#description","title":"Description","text":"<p>Mylar3 is an automated Comic Book (cbr/cbz) downloader program for use with NZB and torrents written in python. It supports SABnzbd, NZBGET, and many torrent clients in addition to DDL. It will allow you to monitor weekly pull-lists for items belonging to user-specific series to download, as well as being able to monitor story-arcs. Support for TPB's and GN's is also now available.</p>"},{"location":"apps/mylar3/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/navidrome/","title":"Navidrome","text":""},{"location":"apps/navidrome/#description","title":"Description","text":"<p>Navidrome is an open source web-based music collection server and streamer. It gives you freedom to listen to your music collection from any browser or mobile device. It's like your personal Spotify!</p>"},{"location":"apps/navidrome/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/netdata/","title":"Netdata","text":""},{"location":"apps/netdata/#description","title":"Description","text":"<p>Netdata is distributed, real-time performance and health monitoring for systems and applications. It is a highly-optimized monitoring agent you install on all your systems and containers.</p>"},{"location":"apps/netdata/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/netdata/#changing-netdatas-hostname","title":"Changing Netdata's Hostname","text":"<p>By default, Netdata will pull from a UID for the container itself to display in the list of Netdata servers you have, so you would see something like '0f2342dac'. To define this and make it more readable/recognizable for you (In case you have multiple Netdata servers):</p> <ul> <li>Stop the netdata container.</li> <li>Create or edit your   override file</li> </ul> <pre><code>services:\n  netdata:\n    hostname: newnetdataname\n</code></pre> <ul> <li>Once this is done, run <code>ds -c netdata</code></li> </ul>"},{"location":"apps/netdata/#notifications","title":"Notifications","text":"<p>Add this file to your Netdata config directory. Populate the notification service(s) you want with login, tokens, or whichever is appropriate. Instructions can be found in here.</p> <p>Create <code>health.d</code> directory in the Netdata config directory. Add <code>.conf</code> files from here and select which modules you want alarms for. Also note that one can remove specific alarms by commenting them in the <code>.conf</code> files.</p>"},{"location":"apps/netdata/#how-to-get-cpu-temp-from-raspberry-pi","title":"How To Get CPU Temp From Raspberry Pi","text":"<p>Netdata will not pick up CPU temps by default from a Raspberry Pi. To activate chart for the Pi's CPU temp add a file with name <code>charts.d.conf</code> in the Netdata config directory and add the following line. <code>sensors=force</code></p>"},{"location":"apps/netdata/#how-to-get-data-from-netdata-to-homeassistant","title":"How To Get Data From Netdata To HomeAssistant","text":"<p>To identify the correct data group and element to input in netdata home assistant component use <code>http://yournetdataip:19999/api/v1/allmetrics?format=json</code></p>"},{"location":"apps/netdata/#monitor-services-with-netdata","title":"Monitor services with Netdata","text":"<p>Create python.d directory in Netdata config directory. Add this file to your python.d directory. Edit according to instructions in file. Our suggestion is to add after the last line in the <code>.conf</code> file. See example below:</p> <pre><code># This plugin is intended for simple cases. Currently, the accuracy of the response time is low and should be used as reference only.\n\nHydra:\n    url: 'http://192.168.86.60:5076/nzbhydra/'\n    timeout: 1\n    redirect: no\n    status_accepted:\n        - 200\n    regex: '.*hydra.*'\n\nOmbi:\n    url: 'http://192.168.86.60:3579/ombi/landingpage'\n    timeout: 1\n    redirect: yes\n    status_accepted:\n        - 200\n    regex: '.*ombi.*'\n</code></pre> <p>You will now get charts in Netdata for Ombi and NZBHydra. Please add your IP and ports accordingly.</p> <p>To get alarms add this file to your health.d directory. Don't forget to comment the unwanted alarms. Slow response alarms can be quite annoying.</p>"},{"location":"apps/nextcloud/","title":"Nextcloud","text":""},{"location":"apps/nextcloud/#description","title":"Description","text":"<p>Nextcloud gives you access to all your files wherever you are.</p>"},{"location":"apps/nextcloud/#installsetup","title":"Install/Setup","text":"<p>When you first set up Nextcloud and navigate to <code>http://&lt;ip&gt;:444</code> you will be presented with a login screen. This login screen will have the following warning:</p> <p>Performance warning You chose SQLite as database. SQLite should only be used for minimal and development instances. For production we recommend a different database backend. If you use clients for file syncing, the use of SQLite is highly discouraged.</p> <p>From there you can click on the dropdown next to <code>Storage &amp; database</code> and you will have 3 options, <code>SQLite</code>, <code>MySQL/MariaDB</code> and <code>PostgreSQL</code>. Pick whichever database driver you like to work with and fill in the necessary fields. Keep in mind that whatever database driver you pick will need to already be installed and/or configured.</p>"},{"location":"apps/nextcloud/#configuring-nextcloud","title":"Configuring Nextcloud","text":"<p>If you are running the DockSTARTer Nextcloud container behind a SWAG reverse proxy, you may need to add a extra line to the NextCloud config.php file so it can find it.</p> <p>Without configuring this you will be able to access the web page, but apps may timeout or return an invalid password.</p> <p>Run the below command and add the line to the config.php file before the <code>);</code></p> <pre><code>nano /config/www/nextcloud/config/config.php\n</code></pre> <p>Copy the following line: <code>'overwritehost' =&gt; 'hostname',</code></p> <p>Where your <code>hostname</code> is the URL you use to access your NextCloud web interface, make sure you include the comma at the end.</p> <p>Doing this will allow the apps to pass the username/password through to the application.</p>"},{"location":"apps/nginx/","title":"Nginx","text":""},{"location":"apps/nginx/#description","title":"Description","text":"<p>Nginx is a simple webserver with php support.</p>"},{"location":"apps/nginx/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/nodered/","title":"Node-RED","text":""},{"location":"apps/nodered/#description","title":"Description","text":"<p>Node-RED is a programming tool for wiring together hardware devices, APIs and online services in new and interesting ways.</p> <p>It provides a browser-based editor that makes it easy to wire together flows using the wide range of nodes in the palette that can be deployed to its runtime in a single-click.</p>"},{"location":"apps/nodered/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/nodered/#common-issues","title":"Common Issues","text":"<p>When you first spin up Node-RED, check your container logs <code>docker logs nodered</code> and you might see something like this:</p> <pre><code>&gt; node-red-docker@1.2.6 start /usr/src/node-red\n&gt; node $NODE_OPTIONS node_modules/node-red/red.js $FLOWS \"--userDir\" \"/data\"\n\nfs.js:114\n    throw err;\n    ^\n\nError: EACCES: permission denied, copyfile '/usr/src/node-red/node_modules/node-red/settings.js' -&gt; '/data/settings.js'\n    at Object.copyFileSync (fs.js:1728:3)\n    at copyFile (/usr/src/node-red/node_modules/fs-extra/lib/copy-sync/copy-sync.js:68:8)\n    at onFile (/usr/src/node-red/node_modules/fs-extra/lib/copy-sync/copy-sync.js:53:25)\n    at getStats (/usr/src/node-red/node_modules/fs-extra/lib/copy-sync/copy-sync.js:48:44)\n    at startCopy (/usr/src/node-red/node_modules/fs-extra/lib/copy-sync/copy-sync.js:38:10)\n    at handleFilterAndCopy (/usr/src/node-red/node_modules/fs-extra/lib/copy-sync/copy-sync.js:33:10)\n    at Object.copySync (/usr/src/node-red/node_modules/fs-extra/lib/copy-sync/copy-sync.js:26:10)\n    at Object.&lt;anonymous&gt; (/usr/src/node-red/node_modules/node-red/red.js:125:20)\n    at Module._compile (internal/modules/cjs/loader.js:778:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:789:10)\nnpm ERR! code ELIFECYCLE\nnpm ERR! errno 1\nnpm ERR! node-red-docker@1.2.6 start: `node $NODE_OPTIONS node_modules/node-red/red.js $FLOWS \"--userDir\" \"/data\"`\nnpm ERR! Exit status 1\nnpm ERR!\nnpm ERR! Failed at the node-red-docker@1.2.6 start script.\nnpm ERR! This is probably not a problem with npm. There is likely additional logging output above.\n</code></pre> <p>This can be resolved by fixing the permissions on the appdata folder, just run:</p> <pre><code>sudo chown $USER:$GROUP -R ~/.config/appdata/nodered\n</code></pre>"},{"location":"apps/nzbget/","title":"NZBGet","text":""},{"location":"apps/nzbget/#description","title":"Description","text":"<p>NZBGet is a usenet downloader, written in C++ and designed with performance in mind to achieve maximum download speed by using very little system resources.</p>"},{"location":"apps/nzbget/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/nzbgetvpn/","title":"NZBGetVPN","text":""},{"location":"apps/nzbgetvpn/#description","title":"Description","text":"<p>NZBGetVPN is a combination of binhex's NZBGet docker with OpenVPN.</p> <p>The support forum for NZBGetVPN is located here.</p>"},{"location":"apps/nzbgetvpn/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/nzbgetvpn/#nzbgetvpn-webui-access","title":"NZBGetVPN WebUI Access","text":"<p>If you're attempting to get access to the NZBGetVPN WebUI remotely outside of your home network, you are going to have to do this through a reverse proxy using SWAG. Full details and steps are outlined here VPN Information.</p>"},{"location":"apps/nzbhydra2/","title":"NZBHydra 2","text":""},{"location":"apps/nzbhydra2/#description","title":"Description","text":"<p>NZBHydra 2 is a meta search for NZB indexers. It provides easy access to a number of raw and newznab based indexers. You can search all your indexers from one place and use it as an indexer source for tools like Sonarr, Radarr or CouchPotato.</p>"},{"location":"apps/nzbhydra2/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/omadacontroller/","title":"Omada Controller","text":""},{"location":"apps/omadacontroller/#description","title":"Description","text":"<p>Docker image based off of Ubuntu 18.04 for TP-Link Omada Controller to control TP-Link Omada EAP Series Wireless Access Points.</p>"},{"location":"apps/omadacontroller/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/ombi/","title":"Ombi","text":""},{"location":"apps/ombi/#description","title":"Description","text":"<p>Ombi allows you to host your own Plex Request and user management system. If you are sharing your Plex server with other users, allow them to request new content using an easy to manage interface! Manage all your requests for Movies and TV with ease, leave notes for the user and get notification when a user requests something. Allow your users to post issues against their requests so you know there is a problem with the audio etc. Even automatically send them weekly newsletters of new content that has been added to your Plex server!</p>"},{"location":"apps/ombi/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/openldap/","title":"OpenLDAP","text":""},{"location":"apps/openldap/#description","title":"Description","text":"<p>A Docker image to run OpenLDAP.</p>"},{"location":"apps/openldap/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/openspeedtest/","title":"Speedtest","text":""},{"location":"apps/openspeedtest/#description","title":"Description","text":"<p>OpenSpeedTest is a self-hosted speed test service which is useful for testing the connection speed to your server.</p>"},{"location":"apps/openvpnas/","title":"OpenVPNAS","text":""},{"location":"apps/openvpnas/#deprecated","title":"DEPRECATED","text":"<p>DEPRECATION NOTICE: This image is deprecated as of 2023-06-02. Use Gluetun or PrivoxyVPN.</p> <p> </p>"},{"location":"apps/openvpnas/#description","title":"Description","text":"<p>OpenVPN-AS is a full featured secure network tunneling VPN software solution that integrates OpenVPN server capabilities, enterprise management capabilities, simplified OpenVPN Connect UI, and OpenVPN Client software packages that accommodate Windows, MAC, Linux, Android, and iOS environments. OpenVPN Access Server supports a wide range of configurations, including secure and granular remote access to internal network and/ or private cloud network resources and applications with fine-grained access control.</p>"},{"location":"apps/openvpnas/#installsetup","title":"Install/Setup","text":"<p>The admin interface is available at <code>https://&lt;ip&gt;:943/admin</code> with a default user/password of admin/password</p> <p>During first login, make sure that the \"Authentication\" in the Web GUI is set to <code>Local</code> instead of <code>PAM</code>. Then set up the user accounts with their password (user accounts created under PAM do not survive container update or recreation).</p> <p>The <code>admin</code> account is a system account (PAM) and after container update or recreation, its password reverts back to the default. It is highly recommended to block this user's access for security reasons. To restrict this account do the following:</p> <ul> <li>Set another user as an <code>admin</code>.</li> <li>Delete the <code>admin</code> user in the GUI.</li> <li>Modify the <code>as.conf</code> on your host located under <code>~/.config/appdata/openvpnas/config/etc</code> and replace the line boot_pam_users.0=admin with #boot_pam_users.0=admin (this only has to be done once and will survive container recreation).</li> </ul>"},{"location":"apps/openvpnas/#server-network-settings","title":"Server Network Settings","text":"<p>Make sure to change Hostname or IP Address to your public IP or public DNS name. It defaults to the docker internal IP. Also, this goes without saying, make sure to forward the correct ports on your firewall to your host IP.</p>"},{"location":"apps/organizr/","title":"Organizr","text":""},{"location":"apps/organizr/#description","title":"Description","text":"<p>Organizr allows you to setup \"Tabs\" that will be loaded all in one webpage. You can then work on your server with ease. Want to give users access to some Tabs? No problem, just enable user support and have them make an account. Want guests to be able to visit too? Enable Guest support for those tabs.</p>"},{"location":"apps/organizr/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/organizr/#reverse-proxy-as-homepage-via-swag","title":"Reverse Proxy as homepage via SWAG","text":"<p>In order to reverse proxy the Organizr container as your homepage via SWAG you will need to rename the subfolder proxy sample with the following command:</p> <pre><code>cp ~/.config/appdata/swag/nginx/proxy-confs/organizr.subfolder.conf.sample ~/.config/appdata/swag/nginx/proxy-confs/organizr.subfolder.conf\n</code></pre> <p>Then edit <code>~/.config/appdata/swag/nginx/site-confs/default</code> to comment out the <code>location / {</code> and <code>location ~ \\.php$ {</code> blocks down to their ending <code>}</code>.</p> <p>Example Before:</p> <pre><code>    location / {\n        try_files $uri $uri/ /index.html /index.php?$args =404;\n    }\n\n    location ~ \\.php$ {\n        fastcgi_split_path_info ^(.+\\.php)(/.+)$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include /etc/nginx/fastcgi_params;\n    }\n</code></pre> <p>Example After:</p> <pre><code>    # location / {\n    #     try_files $uri $uri/ /index.html /index.php?$args =404;\n    # }\n\n    # location ~ \\.php$ {\n    #     fastcgi_split_path_info ^(.+\\.php)(/.+)$;\n    #     fastcgi_pass 127.0.0.1:9000;\n    #     fastcgi_index index.php;\n    #     include /etc/nginx/fastcgi_params;\n    # }\n</code></pre> <p>Lastly, restart the SWAG container:</p> <pre><code>docker restart swag\n</code></pre>"},{"location":"apps/organizr/#pre-modified-default-site-conf","title":"Pre-modified default site-conf","text":"<p>This example is based on the default site config included in SWAG found here. It has been modified to remove a lot of example comments and allow Organizr to take the place of your home page and replace the \"Welcome to our server\" page. This example may not be up to date with the most recent changes from upstream.</p> <pre><code>## Version 2020/05/23 - Changelog: https://github.com/linuxserver/docker-swag/commits/master/root/defaults/default\n\n# redirect all traffic to https\nserver {\n    listen 80 default_server;\n    listen [::]:80 default_server;\n    server_name _;\n    return 301 https://$host$request_uri;\n}\n\n# main server block\nserver {\n    listen 443 ssl http2 default_server;\n    listen [::]:443 ssl http2 default_server;\n\n    root /config/www;\n    index index.html index.htm index.php;\n\n    server_name _;\n\n    # enable subfolder method reverse proxy confs\n    include /config/nginx/proxy-confs/*.subfolder.conf;\n\n    # all ssl related config moved to ssl.conf\n    include /config/nginx/ssl.conf;\n\n    # enable for ldap auth\n    #include /config/nginx/ldap.conf;\n\n    # enable for Authelia\n    #include /config/nginx/authelia-server.conf;\n\n    # enable for geo blocking\n    # See /config/nginx/geoip2.conf for more information.\n    #if ($allowed_country = no) {\n    #return 444;\n    #}\n\n    client_max_body_size 0;\n\n    # location / {\n    #     try_files $uri $uri/ /index.html /index.php?$args =404;\n    # }\n\n    # location ~ \\.php$ {\n    #     fastcgi_split_path_info ^(.+\\.php)(/.+)$;\n    #     fastcgi_pass 127.0.0.1:9000;\n    #     fastcgi_index index.php;\n    #     include /etc/nginx/fastcgi_params;\n    # }\n\n}\n\n# enable subdomain method reverse proxy confs\ninclude /config/nginx/proxy-confs/*.subdomain.conf;\n# enable proxy cache for auth\nproxy_cache_path cache/ keys_zone=auth_cache:10m;\n</code></pre>"},{"location":"apps/ouroboros/","title":"Ouroboros","text":""},{"location":"apps/ouroboros/#deprecated","title":"DEPRECATED","text":"<p>DEPRECATION NOTICE: This image is deprecated as of 2024-02-18. Use Watchtower.</p> <p> </p>"},{"location":"apps/ouroboros/#description","title":"Description","text":"<p>Ouroboros will automatically update your running Docker containers to the latest available image.</p>"},{"location":"apps/ouroboros/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/overseerr/","title":"Overseerr","text":""},{"location":"apps/overseerr/#description","title":"Description","text":"<p>Overseerr is a request management and media discovery tool built to work with your existing Plex ecosystem.</p>"},{"location":"apps/overseerr/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/petio/","title":"Petio","text":""},{"location":"apps/petio/#description","title":"Description","text":"<p>Petio is a third party companion app available to Plex server owners to allow their users to request, review and discover content. The app is built to appear instantly familiar and intuitive to even the most tech-agnostic users. Petio will help you manage requests from your users, connect to other third party apps such as Sonarr and Radarr, notify users when content is available and track request progress. Petio also allows users to discover media both on and off your server, quickly and easily find related content and review to leave their opinion for other users.</p>"},{"location":"apps/petio/#installsetup","title":"Install/Setup","text":"<p>This container requires a mongodb instance that is not included in DockSTARTer. You can add mongodb to your override using the example below.</p>"},{"location":"apps/petio/#example-docker-compose-override","title":"Example Docker Compose Override","text":"<pre><code>services:\n  mongo:\n    container_name: mongo\n    environment:\n      - TZ=${TZ}\n    hostname: ${DOCKER_HOSTNAME}\n    image: mongo:4.4\n    ports:\n      - 27017:27017\n    restart: unless-stopped\n    user: ${PUID}:${PGID}\n    volumes:\n      - /etc/localtime:/etc/localtime:ro\n      - ${DOCKER_VOLUME_CONFIG}/mongo:/data/configdb\n      - ${DOCKER_VOLUME_CONFIG}/mongo/db:/data/db\n</code></pre>"},{"location":"apps/pgadmin/","title":"pgAdmin","text":""},{"location":"apps/pgadmin/#description","title":"Description","text":"<p>pgAdmin: pgAdmin is the most popular and feature rich Open Source administration and development platform for PostgreSQL, the most advanced Open Source database in the world.</p>"},{"location":"apps/pgadmin/#installsetup","title":"Install/Setup","text":"<p>An email address (login) and password are the only required inputs for a fullly functional instance of pgAdmin.</p> <p>Full variable documentation is available in the pgadmin documentation.</p> <p>Any variable name from config.py can be defined in the format of <code>PGADMIN_CONFIG_*</code> in docker-compose.override.yml</p>"},{"location":"apps/pgbackup/","title":"pgBackup","text":""},{"location":"apps/pgbackup/#description","title":"Description","text":"<p>pgBackup: Backup PostgresSQL to the local filesystem with periodic rotating backups</p>"},{"location":"apps/pgbackup/#installsetup","title":"Install/Setup","text":"<p>Set your postgres host, username and password in the .env file along with a comma separated list of databases you want to backup.</p> <p>By default, backups run daily. Change <code>SCHEDULE</code> in <code>env_files/pgbackup.env</code> to any valid cron schedule to modify the default.</p>"},{"location":"apps/pgbackup/#recommended-docker-compose-overrides","title":"Recommended docker-compose overrides","text":"<p>For extra security, it is recommended to limit permissions on the backup folder to a priviledged user. Modify docker-compose.override.yml as below.</p> <p>If you are using postgres docker container, add a dependency to the container</p> <pre><code>pgbackup:\n  user: postgres:postgres\n  depends_on:\n    - postgres\n</code></pre>"},{"location":"apps/pgbackup/#manually-trigger-a-backup","title":"Manually trigger a backup","text":"<p><code>docker exec -it pgbackup ./backup.sh</code></p>"},{"location":"apps/pgbackup/#restore-from-latest-backup","title":"Restore from latest backup","text":"<p>If the database already exists, drop it. Create a database  <pre><code>docker exec -it &lt;postgres_container&gt; /bin/sh -c \"zcat /storage/backups/postgres/last/&lt;db_name&gt;-latest.sql.gz | psql --username=&lt;username&gt; --dbname=&lt;db_name&gt; -W\"\n</code></pre>"},{"location":"apps/photoshow/","title":"Photoshow","text":""},{"location":"apps/photoshow/#description","title":"Description","text":"<p>Photoshow is a gallery software at its easiest, it doesn't even require a database.</p>"},{"location":"apps/photoshow/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/photostructure/","title":"PhotoStructure","text":""},{"location":"apps/photostructure/#description","title":"Description","text":"<p>PhotoStructure is your new home for all your photos &amp; videos.</p>"},{"location":"apps/photostructure/#installsetup","title":"Install/Setup","text":"<p>There are a few directories that get mounted on PhotoStructure that require a bit of a breakdown per the developer.</p> <p><code>/ps/tmp</code> is PhotoStructure\u2019s \u201cscratch\u201d directory.</p> <ul> <li>It must be on a local disk, preferably an SSD.</li> <li>This volume should have at least 16-32 GB free.</li> </ul> <p>If your PhotoStructure library is hosted somewhere over the network, then you must set the variable <code>PS_FORCE_LOCAL_DB_REPLICA</code> in <code>env_files/photostructure.env</code> to a <code>1</code>. It currently defaults to a <code>0</code>.</p>"},{"location":"apps/phpmyadmin/","title":"phpMyAdmin","text":""},{"location":"apps/phpmyadmin/#description","title":"Description","text":"<p>phpMyAdmin is a free software tool written in PHP, intended to handle the administration of MySQL over the Web.</p>"},{"location":"apps/phpmyadmin/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/picard/","title":"MusicBrainz Picard","text":""},{"location":"apps/picard/#description","title":"Description","text":"<p>MusicBrainz Picard is a cross-platform music file tagger written in Python. Your music files don\u2019t just contain music. They also contain \u201cmetadata\u201d, consisting of \u201ctags\u201d which consist of a tag name or type and associated data, for example the album or track name, the name of the artist, the record label, the year of issue etc. MusicBrainz is the database, and Picard is the tool that tags the music files.</p>"},{"location":"apps/pihole/","title":"PiHole","text":""},{"location":"apps/pihole/#description","title":"Description","text":"<p>Pi-hole is a DNS server that is used to filter out advertisements and other unwanted content on a network-wide level.</p>"},{"location":"apps/pihole/#installsetup","title":"Install/Setup","text":"<p>By default, Pi-hole is configured to bind to <code>0.0.0.0</code> on port 53. While this configuration should work out of the box for many people, if you encounter issues with this, it is recommended that you set the variable <code>ServerIP</code> in <code>env_files/pihole.env</code> to your server's IP address (e.g. 192.168.1.5). If you still encounter difficulties getting Pi-hole to work, you may need to disable or reconfigure any conflicting services running on port 53, such as <code>systemd-resolved</code>. Although this is a more advanced configuration, you can also configure systemd-resolved to not listen on port 53 by setting <code>DNSStubListener=no</code> in <code>/etc/systemd/resolved.conf</code>.</p>"},{"location":"apps/piwigo/","title":"Piwigo","text":""},{"location":"apps/piwigo/#description","title":"Description","text":"<p>Piwigo is a photo gallery software for the web that comes with powerful features to publish and manage your collection of pictures.</p>"},{"location":"apps/piwigo/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/plex/","title":"Plex","text":""},{"location":"apps/plex/#description","title":"Description","text":"<p>Plex organizes video, music and photos from personal media libraries and streams them to smart TVs, streaming boxes and mobile devices. This container is packaged as a standalone Plex Media Server. has always been a top priority. Straightforward design and bulk actions mean getting things done faster.</p>"},{"location":"apps/plex/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/plex/#common-issue-playback-fails-for-certain-media","title":"Common Issue: Playback fails for certain media","text":"<p>One possible resolution to this issue is to remove the codecs folder:</p> <pre><code>find \"~/.config/appdata/plex/Library/Application Support/Plex Media Server/Codecs\"* -type d -exec rm -rv {} +\n</code></pre> <p>Or place a custom init script in your config (ex: <code>~/.config/appdata/plex/custom-cont-init.d/00-plex-remove-codecs</code>):</p> <pre><code>#!/usr/bin/with-contenv bash\nset -euo pipefail\nIFS=$'\\n\\t'\n\necho \"Remove codecs: start\"\n\nfind \"/config/Library/Application Support/Plex Media Server/Codecs/\"* -type d -exec rm -rv {} +\n\necho \"Remove codecs: end\"\n</code></pre> <p>This will run every time the container restarts.</p>"},{"location":"apps/plex/#common-issue-cannot-claim-server-on-first-run","title":"Common Issue: Cannot Claim Server on First Run","text":"<p>If you are starting the Plex container for the first time and cannot claim your server to set it up there are 3 methods you can try to resolve the issue:</p>"},{"location":"apps/plex/#1-set-the-plex_claim-variable","title":"1. Set the PLEX_CLAIM variable","text":"<pre><code>docker stop plex\ndocker rm plex\n</code></pre> <pre><code># removes the config folder for plex\n# !WARNING! do NOT do this if you have already setup your plex server and are having issues connecting to it, skip to option 3 instead\nrm -rf ~/.config/appdata/plex\n</code></pre> <pre><code>sudo nano ~/.docker/compose/env_files/plex.env\n# with the nano file editor open locate the PLEX_CLAIM variable\n# go to https://www.plex.tv/claim/ in your browser and get the claim token set your PLEX_CLAIM variable\n# the token expires in 5 minutes, so we'll want to get the rest done quickly\n# ctrl+x to save and exit nano\n</code></pre> <pre><code>ds -c up plex\n</code></pre> <p>Then try again to claim the server by visiting <code>http://yourserverip:32400/web/index.html</code></p>"},{"location":"apps/plex/#2-host-network-mode","title":"2. Host Network Mode","text":"<p>If the first method does not work, edit your <code>.env</code> and set <code>PLEX__NETWORK_MODE=host</code>. Run <code>ds -c</code> and then attempt to claim your server. After claiming your server set <code>PLEX__NETWORK_MODE=</code> (back to blank).</p>"},{"location":"apps/plex/#3-claim-helper-script","title":"3. Claim helper script","text":"<p>If the first and second methods both have not worked this script should make it happen.</p> <pre><code>docker exec -it plex /bin/bash\n</code></pre> <pre><code># download the script\ncurl -L -o plex-claim-server.sh https://github.com/uglymagoo/plex-claim-server/raw/master/plex-claim-server.sh\n</code></pre> <pre><code># make the script executable\nchmod +x plex-claim-server.sh\n</code></pre> <pre><code># go to https://www.plex.tv/claim/ in your browser and get the claim token and replace PLEX_CLAIM with this token in the next command, please use use the double quotes around your claim token\n./plex-claim-server.sh \"PLEX_CLAIM\"\n</code></pre> <pre><code># fix permissions\nchown abc:abc \"/config/Library/Application Support/Plex Media Server/Preferences.xml\"\n</code></pre> <pre><code># leave the container\nexit\n</code></pre> <pre><code>docker restart plex\n</code></pre>"},{"location":"apps/plex/#how-to-run-plex-different-pass-versions","title":"How To Run Plex Different Pass Versions","text":"<p>Edit <code>~/.docker/compose/env_files/plex.env</code> and set:</p> <pre><code>VERSION=plexpass\n</code></pre> <p>Then run:</p> <pre><code>ds -c up plex\n</code></pre>"},{"location":"apps/plex/#rebuilding-from-scratch","title":"Rebuilding From Scratch","text":"<p>Thankfully, some of this information is well documented (but not easily found) over on Plex's website here!</p> <ul> <li>Moving an installation to another system:   https://support.plex.tv/articles/201370363-move-an-install-to-another-system/</li> <li>Where is the Plex Media Server data directory?   https://support.plex.tv/articles/202915258-where-is-the-plex-media-server-data-directory-located/</li> </ul>"},{"location":"apps/plex/#hardware-transcoding","title":"Hardware Transcoding","text":"<p>If you would like to have Plex use a GPU that is attached to your DockSTARTer host, you can do this using an override like so:</p> <pre><code>plex:\n  devices:\n    - /dev/dri:/dev/dri\n</code></pre> <p>Refer to this forum post for details: Using Hardware Acceleration in Docker</p>"},{"location":"apps/plex/#using-fast-or-large-storage-for-specific-plex-configs","title":"Using fast or large storage for specific Plex configs","text":"<p>By default Plex will Cache, Log, Transcode, and store metadata to the config folder for Plex (usually <code>~/.config/appdata/plex/</code>). You may wish to use other disks that are faster, or have more space available for these things. You can do this using an override like so:</p> <pre><code>plex:\n  volumes:\n    - \"/mnt/fastDisk/cache:/config/Library/Application Support/Plex Media Server/Cache\"\n    - \"/mnt/bigDisk/logs:/config/Library/Application Support/Plex Media Server/Logs\"\n    - \"/mnt/bigDisk/media:/config/Library/Application Support/Plex Media Server/Media\"\n    - \"/mnt/bigDisk/metadata:/config/Library/Application Support/Plex Media Server/Metadata\"\n    - \"/mnt/fastDisk/transcode:/config/Library/Application Support/Plex Media Server/Cache/Transcode/Sessions\"\n</code></pre> <p>These volumes are all optional. If your config folder runs on an SSD with enough space you might not need any of them. If your config is stored on an SSD with very little space, you might only relocate the ones above that mention <code>bigDisk</code>. If your config is stored on a slower disk with plenty of space you might only relocate the ones above that mention <code>fastDisk</code>.</p>"},{"location":"apps/plexanisync/","title":"PlexAniSync","text":""},{"location":"apps/plexanisync/#description","title":"Description","text":"<p>Sync your Plex libraries with AniList. Unwatched Anime in Plex will not be synced so only those that have at least one watched episode, updates to AniList are only send with changes so need to worry about messing up watch history.</p>"},{"location":"apps/plexanisync/#installsetup","title":"Install/Setup","text":""},{"location":"apps/portainer/","title":"Portainer","text":""},{"location":"apps/portainer/#description","title":"Description","text":"<p>Portainer is a lightweight management UI which allows you to easily manage your Docker host or Swarm cluster.</p>"},{"location":"apps/portainer/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/portaineragent/","title":"Portainer Agent","text":""},{"location":"apps/portaineragent/#description","title":"Description","text":"<p>The Portainer Agent allows the Docker host to be managed by an instance of Portainer running on another machine.</p>"},{"location":"apps/portaineragent/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/postgres/","title":"PostgresSQL","text":""},{"location":"apps/postgres/#description","title":"Description","text":"<p>Postgres: The World's Most Advanced Open Source Relational Database</p>"},{"location":"apps/postgres/#installsetup","title":"Install/Setup","text":"<p>PostgreSQL is a powerful, open source object-relational database system with over 35 years of active development that has earned it a strong reputation for reliability, feature robustness, and performance.</p> <p>There is a wealth of information to be found describing how to install and use PostgreSQL through the official documentation. The open source community provides many helpful places to become familiar with PostgreSQL, discover how it works.</p> <p>We heavily recommend that if you spin up a container that requires a database you create a user for that container. You should NEVER use the root account for anything other than database management.</p> <p>Strongly consider also installing pgAdmin for administration and pgBackup for periodic rotating backups.</p>"},{"location":"apps/postgres/#common-activities","title":"Common Activities","text":""},{"location":"apps/postgres/#create-user","title":"Create user","text":"<pre><code>CREATE USER newuser WITH PASSWORD 'password123';\n</code></pre>"},{"location":"apps/postgres/#make-user-a-superuser","title":"Make user a superuser","text":"<pre><code>CREATE USER newadmin WITH PASSWORD 'password123';\nALTER USER newadmin WITH SUPERUSER;\n</code></pre>"},{"location":"apps/postgres/#create-a-database-and-owner-to-the-new-user","title":"Create a database and owner to the new user","text":"<p>CREATE DATABASE newdatabase; ALTER DATABASE newdatabase OWNER TO newuser;</p>"},{"location":"apps/privoxyvpn/","title":"PrivoxyVPN","text":""},{"location":"apps/privoxyvpn/#description","title":"Description","text":"<p>PrivoxyVPN is an Arch Linux based Docker Image with Privoxy, MicroSocks, OpenVPN and WireGuard.</p> <p>The support forum for PrivoxyVPN is located here.</p>"},{"location":"apps/privoxyvpn/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/prometheus/","title":"Prometheus","text":""},{"location":"apps/prometheus/#description","title":"Description","text":"<p>Prometheus is a systems and service monitoring system. It collects metrics from configured targets at given intervals, evaluates rule expressions, displays the results, and can trigger alerts if some condition is observed to be true.</p>"},{"location":"apps/prometheus/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/prowlarr/","title":"Prowlarr","text":""},{"location":"apps/prowlarr/#description","title":"Description","text":"<p>Prowlarr is a indexer manager/proxy built on the popular arr .net/reactjs base stack to integrate with your various PVR apps. Prowlarr supports both Torrent Trackers and Usenet Indexers. It integrates seamlessly with Sonarr, Radarr, Lidarr, and Readarr offering complete management of your indexers with no per app Indexer setup required (we do it all).</p>"},{"location":"apps/prowlarr/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/pyload/","title":"PyLoad","text":""},{"location":"apps/pyload/#description","title":"Description","text":"<p>pyLoad is a Free and Open Source download manager written in Python and designed to be extremely lightweight, easily extensible and fully manageable via web.</p> <p>DockSTARTer includes pyLoad-NG by default.</p>"},{"location":"apps/pyload/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/qbittorrent/","title":"qBittorrent","text":""},{"location":"apps/qbittorrent/#description","title":"Description","text":"<p>qBittorrent project aims to provide an open-source software alternative to \u00b5Torrent. qBittorrent is based on the Qt toolkit and libtorrent-rasterbar library.</p>"},{"location":"apps/qbittorrent/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/qbittorrentvpn/","title":"qBittorrentVPN","text":""},{"location":"apps/qbittorrentvpn/#description","title":"Description","text":"<p>qBittorrentVPN is a Docker build script for Arch Linux base with qBittorrent, Privoxy and OpenVPN all included in one image.</p> <p>The support forum for qBittorrentVPN is located here.</p>"},{"location":"apps/qbittorrentvpn/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/qbittorrentvpn/#qbittorrentvpn-webui-access","title":"qBittorrentVPN WebUI Access","text":"<p>If you're attempting to get access to the qBittorrentVPN WebUI remotely outside of your home network, you are going to have to do this through a reverse proxy using SWAG. Full details and steps are outlined here VPN Information.</p>"},{"location":"apps/quasselcore/","title":"Quassel-core","text":""},{"location":"apps/quasselcore/#description","title":"Description","text":"<p>Quassel-core is a modern, cross-platform, distributed IRC client, meaning that one/multiple client(s) can attach to and detach from a central core.</p> <p>This container handles the IRC connection (quasselcore) and requires a desktop client (quasselclient) to be used and configured. It is designed to be always on and will keep your identity present in IRC even when your clients cannot be online. Backlog (history) is downloaded by your client upon reconnection allowing infinite scrollback through time.</p>"},{"location":"apps/quasselcore/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/quasselweb/","title":"Quassel-web","text":""},{"location":"apps/quasselweb/#description","title":"Description","text":"<p>Quassel-web is a web client for Quassel. Note that a Quassel-core instance is required. A container for it can be found here.</p>"},{"location":"apps/quasselweb/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/radarr/","title":"Radarr","text":""},{"location":"apps/radarr/#description","title":"Description","text":"<p>Radarr a fork of Sonarr to work with movies \u00e0 la Couchpotato.</p>"},{"location":"apps/radarr/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/readarr/","title":"Readarr","text":""},{"location":"apps/readarr/#description","title":"Description","text":"<p>Readarr is an ebook and audiobook collection manager for Usenet and BitTorrent users.</p>"},{"location":"apps/readarr/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/recyclarr/","title":"Recyclarr","text":""},{"location":"apps/recyclarr/#description","title":"Description","text":"<p>Recyclarr Recyclarr is a command-line application that will automatically synchronize recommended settings from the TRaSH guides to your Sonarr/Radarr instances. It was formerly named \"Trash Updater\".</p>"},{"location":"apps/recyclarr/#installsetup","title":"Install/Setup","text":"<p>When installing the Recyclarr container, the installer will install under <code>appdata</code> directory as the root user, however once it is installed you can change the owner/group of it to whatever is required</p> <p>Run the below command from a terminal to change the permissions if required:</p> <pre><code>sudo chown -R $USER:$USER ~/.config/appdata/recyclarr\n</code></pre> <p>Restart your container by running:</p> <pre><code>docker restart recyclarr\n</code></pre> <p>Having the owner group change will allow you to edit the files if required without running into permission issues.</p> <p>This application does not have any further specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/requestrr/","title":"Requestrr","text":""},{"location":"apps/requestrr/#description","title":"Description","text":"<p>Requestrr is a chatbot used to simplify using services like Sonarr/Radarr/Ombi via the use of chat!</p>"},{"location":"apps/requestrr/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/resiliosync/","title":"Resilio-sync","text":""},{"location":"apps/resiliosync/#description","title":"Description","text":"<p>Resilio-sync (formerly BitTorrent Sync) uses the BitTorrent protocol to sync files and folders between all of your devices. There are both free and paid versions, this container supports both. There is an official sync image but we created this one as it supports user mapping to simplify permissions for volumes.</p>"},{"location":"apps/resiliosync/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/rsnapshot/","title":"Rsnapshot","text":""},{"location":"apps/rsnapshot/#description","title":"Description","text":"<p>Rsnapshot is a filesystem snapshot utility based on rsync. rsnapshot makes it easy to make periodic snapshots of local machines, and remote machines over ssh. The code makes extensive use of hard links whenever possible, to greatly reduce the disk space required.</p>"},{"location":"apps/rsnapshot/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/rtorrentvpn/","title":"rTorrentVPN","text":""},{"location":"apps/rtorrentvpn/#deprecated","title":"DEPRECATED","text":"<p>DEPRECATION NOTICE: This image is deprecated as of 2024-02-18. Use Deluge, qBittorrent, or Transmission with Gluetun or PrivoxyVPN.</p> <p> </p>"},{"location":"apps/rtorrentvpn/#description","title":"Description","text":"<p>rTorrentVPN is a Docker build script for Arch Linux base with rtorrent-ps, ruTorrent, autodl-irssi, Privoxy and OpenVPN all included in one image.</p> <p>The support forum for rTorrentVPN is located here.</p>"},{"location":"apps/rtorrentvpn/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/rtorrentvpn/#rtorrentvpn-webui-access","title":"rTorrentVPN WebUI Access","text":"<p>If you're attempting to get access to the rTorrentVPN WebUI remotely outside of your home network, you are going to have to do this through a reverse proxy using SWAG. Full details and steps are outlined here VPN Information.</p> <p>The sample proxy configuration files found in <code>~/.config/appdata/swag/nginx/proxy-confs/</code> will need to be modified and as usual, have the .sample removed from the filename.</p> <p>You will need to edit the appropriate proxy <code>.conf</code>. Enter either <code>sudo nano rutorrent.subfolder.conf</code> or <code>sudo nano rutorrent.subdomain.conf</code> depending on your configuration desires and change the below lines. NOTE: There will be multiple lines that need to be changed.</p> <p>Original</p> <pre><code>set $upstream_app rutorrent;\nset $upstream_port 80;\n</code></pre> <p>Modified</p> <pre><code>set $upstream_app rtorrentvpn;\nset $upstream_port 9080;\n</code></pre> <p>Save the file and restart your container by running:</p> <pre><code>docker restart swag\n</code></pre>"},{"location":"apps/rustdesk/","title":"RustDesk","text":""},{"location":"apps/rustdesk/#description","title":"Description","text":"<p>RustDesk is an open-source, self-hosted TeamViewer alternative.</p> <p>This uses the \"S6-overlay based image\" for RustDesk which ships both hbbs and hbbr in a single container.</p> <p>hbbs is the RustDesk ID/Rendezvous server. hbbr is the RustDesk relay server. Both are needed for a functional RustDesk deployment.</p> <p>When hbbs is first run, it will generate a public/private key pair for the clients to use. You can see this take place in the logs:</p> <pre><code>INFO [src/common.rs:133] Private/public key written to id_ed25519/id_ed25519.pub\n</code></pre> <p>You can view the contents of this key by browsing to your config folder, for instance, <code>~/.config/appdata/rustdesk</code>.</p>"},{"location":"apps/rustdesk/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/rutorrent/","title":"ruTorrent","text":""},{"location":"apps/rutorrent/#deprecated","title":"DEPRECATED","text":"<p>DEPRECATION NOTICE: This image is deprecated as of 2024-02-18. Use Deluge, qBittorrent, or Transmission.</p> <p> </p>"},{"location":"apps/rutorrent/#description","title":"Description","text":"<p>ruTorrent is a popular rTorrent client with a webui for ease of use.</p>"},{"location":"apps/rutorrent/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/sabnzbd/","title":"SABnzbd","text":""},{"location":"apps/sabnzbd/#description","title":"Description","text":"<p>SABnzbd makes Usenet as simple and streamlined as possible by automating everything we can. All you have to do is add an <code>.nzb.</code> and SABnzbd takes over from there, where it will be automatically downloaded, verified, repaired, extracted and filed away with zero human interaction.</p>"},{"location":"apps/sabnzbd/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/sabnzbdvpn/","title":"SABnzbdVPN","text":""},{"location":"apps/sabnzbdvpn/#description","title":"Description","text":"<p>SABnzbd is a Docker build script for Arch Linux base with SABnzbd, Privoxy and OpenVPN all included in one image.</p> <p>The support forum for SABnzbdVPN is located here.</p>"},{"location":"apps/sabnzbdvpn/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/sabnzbdvpn/#sabnzbdvpn-webui-access","title":"SABnzbdVPN WebUI Access","text":"<p>If you're attempting to get access to the SABnzbdVPN WebUI remotely outside of your home network using SWAG you must follow the steps outlined in VPN Information.</p>"},{"location":"apps/samba/","title":"Samba","text":""},{"location":"apps/samba/#deprecated","title":"DEPRECATED","text":"<p>DEPRECATION NOTICE: This image is deprecated as of 2024-02-18.</p> <p> </p>"},{"location":"apps/samba/#description","title":"Description","text":"<p>Samba is using the <code>SMB</code> protocol to share Linux mounts, which then are accessible and mountable on a Windows computer.</p> <p>By default, Samba will share all media directories and Docker config directory over SMB on the host. All of these directories will be placed inside whatever share name is specified for <code>SAMBA__ENVIRONMENT_SHARENAME</code> in your <code>.env</code> file. These shares are protected with username <code>ds</code> and password <code>ds</code> by default, but can and should be changed in your <code>.env</code> file.</p>"},{"location":"apps/samba/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/samba/#access-shares","title":"Access Shares","text":"<p>Replace <code>host</code> with your DNS or IP-address of your Docker host.</p> <ul> <li><code>\\\\host\\DockSTARTer</code></li> </ul>"},{"location":"apps/samba/#setting-up-additional-shares","title":"Setting Up Additional Shares","text":"<p>You can set up additional shares using an override. To do so, you need to do the following:</p> <ul> <li> <p>Create a new variable in your <code>.env</code> file that will be the path to your new   share on the host e.g. <code>/path/to/your/share</code> and give it an easily   recognizable name e.g. <code>SAMBA_xxxx=/path/to/share</code>.</p> </li> <li> <p>Create another variable that will be the share name that shows up when you   access your shares. For example, <code>SAMBA_SHARE_xxx=AnotherShare</code></p> </li> <li> <p>On your override file under <code>environment</code> and <code>volumes</code> you will you need to   copy the following:</p> </li> </ul> <pre><code>environment:\n  - SHARE2=${SAMBA_SHARENAME};/${SAMBA_SHARENAME};yes;no;no;all;${SAMBA_USERNAME}\n\nvolumes:\n  - ${SAMBA_xxx}:/path/inside/container\n</code></pre> <ul> <li> <p>Make sure to update what is inside <code>${}</code> to match whatever you used in     Step 2.</p> </li> <li> <p>If you want to add additional shares in the future just add a number at the     end of the <code>SHARE</code> and just copy and paste everything after the <code>=</code>. Don't     forget to update what is inside the <code>${}</code>.</p> </li> <li> <p>Run <code>ds -c up samba</code> to recreate the container and the new share can be   generated.</p> </li> </ul>"},{"location":"apps/samba/#how-to-mount-windows-share-in-linux","title":"How To Mount Windows Share in Linux","text":"<p>See SMB Mounting.</p>"},{"location":"apps/sickchill/","title":"SickChill","text":""},{"location":"apps/sickchill/#description","title":"Description","text":"<p>SickChill is an Automatic Video Library Manager for TV Shows. It watches for new episodes of your favorite shows, and when they are posted it does its magic.</p>"},{"location":"apps/sickchill/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/smokeping/","title":"Smokeping","text":""},{"location":"apps/smokeping/#description","title":"Description","text":"<p>Smokeping keeps track of your network latency.</p>"},{"location":"apps/smokeping/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/sonarr/","title":"Sonarr","text":""},{"location":"apps/sonarr/#description","title":"Description","text":"<p>Sonarr formerly (NZBdrone) is a PVR for usenet and bittorrent users. It can monitor multiple RSS feeds for new episodes of your favorite shows and will grab, sort and rename them. It can also be configured to automatically upgrade the quality of files already downloaded when a better quality format becomes available.</p>"},{"location":"apps/sonarr/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/speedtest/","title":"Speedtest","text":""},{"location":"apps/speedtest/#description","title":"Description","text":"<p>Speedtest Tracker runs a speedtest check every hour and graphs the results. The back-end is written in <code>Laravel</code> and the front-end uses <code>React</code>. It uses the Ookla's Speedtest cli package to get the data and uses <code>Chart.js</code> to plot the results.</p> <p>This program can also be used a home page item in Organizr.</p> <p>A demo is available here.</p> <p>Disclaimer: You will need to accept Ookla's EULA and privacy agreements in order to use this container.</p>"},{"location":"apps/speedtest/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/speedtest/#base-path","title":"Base Path","text":"<p>You can set a base path for this application if you want to host it behind a reverse proxy. By default it binds to <code>/</code>, but you can change the variable called <code>BASE_PATH</code> in your <code>env_files/speedtestr.env</code> file to whatever you want and run <code>ds -c up speedtest</code> afterwards.</p> <p>As usual, we strongly discourage having this application be public facing without some sort of protection in front of it, such as Organizr's Server Auth.</p>"},{"location":"apps/speedtest/#notifications","title":"Notifications","text":"<p>This application supports notifications to some of the most popular services such as Telegram and Discord. Both of these services can be configured either using the application's Web GUI or environment variables through an override.</p>"},{"location":"apps/swag/","title":"SWAG","text":""},{"location":"apps/swag/#description","title":"Description","text":"<p>SWAG (Secure Web-server And Gateway) sets up an NGINX webserver and reverse proxy with PHP support and a built-in swag client that automates free SSL server certificate generation and renewal processes. It also contains fail2ban for intrusion prevention.</p>"},{"location":"apps/swag/#installsetup","title":"Install/Setup","text":"<p>Official Guide</p> <p>If this is your first time learning about NGINX, proxies, or and Let's Encrypt, we highly recommend you read over the official guide for the container.</p>"},{"location":"apps/swag/#general-setup","title":"General Setup","text":"<p>Out of the box, the SWAG container created by linuxserver.io performs reverse proxy functions using NGINX and automatic https encrypted connections using certificates provided by Let's Encrypt.</p> <p>To configure your reverse proxy, consider if you want to use subfolders (ie. domain.com/portainer) or subdomains (ie. portainer.domain.com). Subdomains will take more configuration, as DNS entries and certificate subject alternate names are required.</p> <p>The first thing to setup is your domain and email settings in <code>.docker/compose/env_files/swag.env</code>. Set the <code>EMAIL</code> and <code>URL</code>. If using subdomains ensure to add each subdomain to <code>SUBDOMAINS</code> as each subdomain prefix (e.g. <code>SUBDOMAINS=portainer,deluge,pihole</code>.</p> <p>There are a number of sample proxy configuration files found in <code>~/.config/appdata/swag/nginx/proxy-confs/</code> and in most cases will just need the .sample removed from the filename. Currently not every applicable app has an example configuration and are still being tested.</p> <p>Subfolder Example:</p> <pre><code>cp ~/.config/appdata/swag/nginx/proxy-confs/portainer.subfolder.conf.sample ~/.config/appdata/swag/nginx/proxy-confs/portainer.subfolder.conf\n</code></pre> <p>This will make Portainer available at <code>domain.com/portainer</code></p> <p>Subdomain Example:</p> <pre><code>cp ~/.config/appdata/swag/nginx/proxy-confs/portainer.subdomain.conf.sample ~/.config/appdata/swag/nginx/proxy-confs/portainer.subdomain.conf\n</code></pre> <p>and will enable the service at <code>portainer.domain.com</code></p> <p>Each time you change a proxy conf file you will need to restart the Swag container:</p> <pre><code>docker restart swag\n</code></pre>"},{"location":"apps/synclounge/","title":"SyncLounge","text":""},{"location":"apps/synclounge/#description","title":"Description","text":"<p>SyncLounge is a third party tool that allows you to watch Plex in sync with your friends/family, wherever you are.</p>"},{"location":"apps/synclounge/#installsetup","title":"Install/Setup","text":"<p>SyncLounge works best if you have a domain to use and it is recommended that you use this with the SWAG container supported by DockSTARTer. Also, since some Plex clients can only operate over HTTP, SyncLounge needs to be accessible by HTTP or your users will need to enable mixed content in their browser for ONLY the domain SyncLounge is on.</p> <p>The below steps assume that you already have the SWAG container selected, configured, and running. If not, do that first or along with steps 1 &amp; 2 below.</p> <ul> <li>Enable <code>SyncLounge</code> by running:</li> </ul> <pre><code>ds -a synclounge\n</code></pre> <ul> <li> <p>Complete the DockSTARTer configuration.</p> </li> <li> <p>Make sure to set the <code>EXTERNAL_URL</code> in <code>env_files/synclounge.env</code> setting to the appropriate domain. E.g. - <code>synclouge.yourdomain.tld</code>     Otherwise, keep the default settings until you make sure everything is working okay</p> </li> <li> <p>Recreate the container so settings get applied:</p> </li> </ul> <pre><code>ds -c up synclounge\n</code></pre> <ul> <li> <p>Find the file called <code>synclounge.subdomain.conf.sample</code> in your SWAG <code>proxy-confs</code> folder and rename it to <code>synclounge.subdomain.conf</code> (By default, this has HTTP and HTTPS enabled).</p> </li> <li> <p>Restart the SWAG container:</p> </li> </ul> <pre><code>docker restart swag\n</code></pre> <p>You should now be able to go to <code>synclouge.yourdomain.tld</code> and use SyncLounge!</p> <p>Once you verify that everything is working, you can then start tinkering with settings.</p> <p>If you would rather have SyncLounge running under a different domain as a subfolder, you can use the <code>synclounge.subfolder.conf.sample</code>. This file contains instructions for how to enable HTTP for the domain, how to force HTTP (if desired), as well as how to change the URL SyncLounge operates on.</p>"},{"location":"apps/synclounge/#advanced","title":"Advanced","text":""},{"location":"apps/synclounge/#override-servers-list","title":"Override Servers List","text":"<p>If you want to override the Servers List you'll need to create an override to mount your servers file.</p> <ul> <li> <p>Create a file called <code>servers.json</code> in your SyncLounge folder (<code>~/.config/appdata/synclounge/</code>) and populate it with servers by following this guide.</p> </li> <li> <p>Your servers.json file should NOT include the <code>\"servers\":</code> prefix (that is for the settings file which isn't used here). Only <code>[]</code> and the server objects inside should be included.</p> </li> <li> <p>Add or update your override file to include the example below:</p> </li> </ul> <pre><code>services:\n  synclounge:\n    volumes:\n      - ${DOCKER_VOLUME_CONFIG}/synclounge/servers.json:/defaults/servers.json\n</code></pre> <ul> <li>Recreate your container:</li> </ul> <pre><code>ds -c up synclounge\n</code></pre>"},{"location":"apps/syncthing/","title":"Syncthing","text":""},{"location":"apps/syncthing/#description","title":"Description","text":"<p>Syncthing replaces proprietary sync and cloud services with something open, trustworthy and decentralized. Your data is your data alone and you deserve to choose where it is stored, if it is shared with some third party and how it's transmitted over the Internet.</p>"},{"location":"apps/syncthing/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/tandoor/","title":"Tandoor","text":""},{"location":"apps/tandoor/#description","title":"Description","text":"<p>Tandoor is a recipe manager and so much more. You can import recipes from thousands of websites, generate mealplans, manage your shopping list. Share and collaborate with your friends and family using a mobile friendly web interface.</p>"},{"location":"apps/tandoor/#installsetup","title":"Install/Setup","text":"<p>This application has extensive customization options, most docker env variables are documented in the .env.template If you run into any issues, enable debug mode to collect logs before opening a ticket.</p> <p>The application requires a secret key for cryptographic signing. It can be any string, but it is recommend to generate a random string. On linux you can run <code>tr -dc A-Za-z0-9 &lt;/dev/urandom | head -c 32; echo</code> to generate a random 32 character string.</p>"},{"location":"apps/tandoor/#running-with-postgresql","title":"Running with PostgreSQL","text":"<p>It is highly recommended to use this application with a PostgreSQL database. To setup with postgres, after installing a postgres server (or enabling the DockSTARTer app) create a database and edit .env to use postgres instead of sqlite. <code>TANDOOR_DATABASE_URL='postgresql://&lt;postgres_user&gt;:&lt;postgres_password&gt;@&lt;postgres_host&gt;/&lt;tandoor_db&gt;:5432</code></p> <p>Optionally, make tandoor dependent on the postgres container</p> <pre><code>tandoor:\n  depends_on:\n    - postgres_host\n</code></pre>"},{"location":"apps/tandoor/#running-with-swag","title":"Running with SWAG","text":"<p>It is also highly recommended to serve media files with a web server. If you are already using SWAG you can use nginx to accomplish this. Set <code>GUNICORN_MEDIA</code> in <code>env_files/tandoor.env</code> to '0' and edit the docker-compose.override.yml similar to below.</p> <pre><code>swag:\n  volumes:\n    - ${DOCKER_VOLUME_CONFIG}/recipes/mediafiles:/media\n</code></pre> <p>Copy <code>swag/nginx/proxy-confs/recipes.subdomain.conf.sample</code> to recipes.subdomain.conf editing as necessary to match your setup and restart swag.</p>"},{"location":"apps/tautulli/","title":"Tautulli","text":""},{"location":"apps/tautulli/#description","title":"Description","text":"<p>Tautulli is a python based web application for monitoring, analytics and notifications for Plex Media Server.</p>"},{"location":"apps/tautulli/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/tdarr/","title":"Tdarr","text":""},{"location":"apps/tdarr/#description","title":"Description","text":"<p>Tdarr is a cross-platform, distributed transcoding system which is broken up into multiple modules.</p>"},{"location":"apps/tdarr/#installsetup","title":"Install/Setup","text":"<p>When installing the Tdarr container, the installer will install under the <code>appdata</code> directory as the root user and you will see errors as such:</p> <ul> <li>Starting database mongodb</li> </ul> <p>...fail</p> <p>Permissions are likely not set correctly on your <code>TDARR_DB</code> variable location, run the following:</p> <pre><code>sudo chown -R $USER:$USER /path/to/location\n</code></pre> <p>Restart your container by running:</p> <pre><code>docker restart tdarr\n</code></pre>"},{"location":"apps/tdarrnode/","title":"Tdarr Node","text":""},{"location":"apps/tdarrnode/#description","title":"Description","text":"<p>Tdarr Node is a companion module to Tdarr. Nodes are a cross-platform module which work together with Tdarr to process your files. Can be run on same machine as Tdarr or remotely.</p>"},{"location":"apps/tdarrnode/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/telegraf/","title":"Telegraf","text":""},{"location":"apps/telegraf/#description","title":"Description","text":"<p>Telegraf is an agent for collecting, processing, aggregating, and writing metrics.Design goals are to have a minimal memory footprint with a plugin system so that developers in the community can easily add support for collecting metrics.</p>"},{"location":"apps/telegraf/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/thelounge/","title":"TheLounge","text":""},{"location":"apps/thelounge/#description","title":"Description","text":"<p>TheLounge is a web IRC client that you host on your own server.</p>"},{"location":"apps/thelounge/#installsetup","title":"Install/Setup","text":"<ul> <li>When the application first runs, it will populate its <code>/config</code></li> <li>Stop the container</li> <li>Now from the host, edit <code>~/.config/appdata/thelounge/config.js</code>, or wherever you've mapped it</li> <li>In most cases you want the value <code>public: false</code> to allow named users only</li> <li>This will allow for persistent connections to the servers you configure for each account</li> <li>Setting the two prefetch values to <code>true</code> improves usability, but uses more storage</li> <li>Once you have the configuration you want, save it and start the container again</li> <li>For each user, run the command</li> <li><code>docker exec -it thelounge s6-setuidgid abc thelounge add &lt;user&gt;</code></li> <li>You will be prompted to enter a password that will not be echoed.</li> <li>Saving logs to disk is the default, this consumes more space but allows scrollback.</li> <li>To log in to the application, browse to <code>http://&lt;hostip&gt;:9000</code></li> <li>Other containerized applications such as organizr would use <code>http://&lt;container&gt;:9000</code></li> <li>You should now be prompted for a username and password on the webinterface.</li> <li>Once logged in, you can add an IRC network. Some defaults are preset for Freenode.</li> </ul> <p>If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/timemachine/","title":"Time Machine","text":""},{"location":"apps/timemachine/#description","title":"Description","text":"<p>Docker image to run Samba to provide a compatible Time Machine for macOS.</p>"},{"location":"apps/timemachine/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/traefik/","title":"Traefik","text":""},{"location":"apps/traefik/#description","title":"Description","text":"<p>Traefik is a modern HTTP reverse proxy and load balancer that makes deploying microservices easy.</p>"},{"location":"apps/traefik/#installsetup","title":"Install/Setup","text":"<p>This container itself is quite simple but note that lots of customization will be needed for the client apps you will be routing with Traefik. You'll need to use DockSTARTer overrides, more specifically editing <code>docker-compose.override.yml</code> to add labels, etc, to your client apps to configure Traefik routing.</p>"},{"location":"apps/traefik/#traefikyml","title":"traefik.yml","text":"<p>You can configure Traefik itself with a <code>traefik.yml</code> file. You should create this at <code>${DOCKER_VOLUME_CONFIG}/traefik</code> which is by default volume mapped to <code>/etc/traefik</code> inside the container.</p>"},{"location":"apps/traefik/#suggested-reading","title":"Suggested Reading","text":"<p>Traefik Documentation Docker Hub Documentation of Traefik</p>"},{"location":"apps/traktarr/","title":"Traktarr","text":""},{"location":"apps/traktarr/#description","title":"Description","text":"<p>Traktarr is script to add new series &amp; movies to Sonarr/Radarr based on Trakt lists.</p>"},{"location":"apps/traktarr/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/transmission/","title":"Transmission","text":""},{"location":"apps/transmission/#description","title":"Description","text":"<p>Transmission is designed for easy, powerful use. Transmission has the features you want from a BitTorrent client: encryption, a web interface, peer exchange, magnet links, DHT, \u00b5TP, UPnP and NAT-PMP port forwarding, webseed support, watch directories, tracker editing, global and per-torrent speed limits, and more.</p>"},{"location":"apps/transmission/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/transmissionvpn/","title":"TransmissionVPN","text":""},{"location":"apps/transmissionvpn/#description","title":"Description","text":"<p>This container contains OpenVPN and Transmission with a configuration where Transmission is running only when OpenVPN has an active tunnel. It bundles configuration files for many popular VPN providers to make the setup easier.</p>"},{"location":"apps/transmissionvpn/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/transmissionvpn/#transmissionvpn-webui-access","title":"TransmissionVPN WebUI Access","text":"<p>If you're attempting to get access to the TransmissionVPN WebUI remotely outside of your home network, you are going to have to do this through a reverse proxy using SWAG. Full details and steps are outlined here VPN Information.</p>"},{"location":"apps/tsdproxy/","title":"TSDProxy","text":""},{"location":"apps/tsdproxy/#description","title":"Description","text":"<p>TSDProxy is an application that automatically creates a proxy to virtual addresses in your Tailscale network. Easy to configure and deploy, based on Docker container labels or a simple proxy list file. It simplifies traffic redirection to services running inside Docker containers, without the need for a separate Tailscale container for each service.</p>"},{"location":"apps/tsdproxy/#installsetup","title":"Install/Setup","text":"<p>Ensure Tailscale is installed and configured on your host machine.</p> <p>If you need further assistance setting up this application, please visit the official GitHub repository or our support page.</p>"},{"location":"apps/tvheadend/","title":"Tvheadend","text":""},{"location":"apps/tvheadend/#description","title":"Description","text":"<p>TVheadend works as a proxy server: is a TV streaming server and recorder for Linux, FreeBSD and Android supporting DVB-S, DVB-S2, DVB-C, DVB-T, ATSC, ISDB-T, IPTV, SAT&gt;IP and HDHomeRun as input sources. Tvheadend offers the HTTP (VLC, MPlayer), HTSP (Kodi, Movian) and SAT&gt;IP streaming. Multiple EPG sources are supported (over-the-air DVB and ATSC including OpenTV DVB extensions, XMLTV, PyXML).</p>"},{"location":"apps/tvheadend/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/ubooquity/","title":"Ubooquity","text":""},{"location":"apps/ubooquity/#description","title":"Description","text":"<p>Ubooquity is a free, lightweight and easy-to-use home server for your comics and ebooks. Use it to access your files from anywhere, with a tablet, an e-reader, a phone or a computer.</p>"},{"location":"apps/ubooquity/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/unificontroller/","title":"UniFi Controller","text":""},{"location":"apps/unificontroller/#description","title":"Description","text":"<p>UniFi Controller software is a powerful, enterprise wireless software engine ideal for high-density client deployments requiring low latency and high uptime performance.</p>"},{"location":"apps/unificontroller/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/unificontroller/#common-issue-devices-get-stuck-in-adopting-state","title":"Common Issue: Devices Get Stuck In \"Adopting\" State","text":"<p>To prevent your devices getting stuck on an \"Adopting\" loop, log in to your controller and update how the controller sends the inform command. This can be achieved by going to <code>Settings &gt; Controller Settings</code>. On the right hand side, you will see <code>Controller Hostname/IP</code>, change this to your Docker host's IP address or hostname. Additionally, make sure to toggle (it is <code>off</code> by default) the option that says <code>Override inform Host</code>. This will make it so the inform command is <code>http://&lt;xxx.xxx.xxx.xxx&gt;:8080/inform</code> where <code>xxx.xxx.xxx.xxx</code> is your Docker host's IP and not an internal docker address.</p> <p>If you don't see this option or are having problems finding the settings then look over near the top and click <code>Can't find what you need? Switch to Classic Mode</code>. You will then need to go to <code>Controller</code> near the bottom and on the right hand side look for <code>Controller Hostname/IP</code> and follow the same steps mentioned above.</p>"},{"location":"apps/unmanic/","title":"Unmanic","text":""},{"location":"apps/unmanic/#description","title":"Description","text":"<p>Unmanic is a simple tool for optimizing your video library to a single format. The ultimate goal of Unmanic is to take the complexity out of converting your whole media library. The idea is to simply point Unmanic at your library and let it manage it.</p>"},{"location":"apps/unmanic/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/unpackerr/","title":"Unpackerr","text":""},{"location":"apps/unpackerr/#description","title":"Description","text":"<p>Unpackerr runs as a daemon on your download host. It checks for completed downloads and extracts them so Radarr, Lidarr, Sonarr, and Readarr may import them. There are a handful of options out there for extracting and deleting files after your client downloads them. I just didn't care for any of them, so I wrote my own. I wanted a small single-binary with reasonable logging that can extract downloaded archives and clean up the mess after they've been imported.</p>"},{"location":"apps/unpackerr/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/uptimekuma/","title":"Uptime Kuma","text":""},{"location":"apps/uptimekuma/#description","title":"Description","text":"<p>Uptime Kuma is a self-hosted monitoring tool like \"Uptime Robot\".</p>"},{"location":"apps/uptimekuma/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/varken/","title":"Varken","text":""},{"location":"apps/varken/#description","title":"Description","text":"<p>Varken is a standalone application to aggregate data from the Plex ecosystem into InfluxDB using Grafana for a frontend</p> <p>Fun fact: Varken is Dutch for pig. <code>PIG</code> is an acronym for Plex/InfluxDB/Grafana</p>"},{"location":"apps/varken/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/vsftpd/","title":"Vsftpd","text":""},{"location":"apps/vsftpd/#description","title":"Description","text":"<p>vsftpd is an FTP server for Unix-like systems.</p>"},{"location":"apps/vsftpd/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/watchtower/","title":"Watchtower","text":""},{"location":"apps/watchtower/#description","title":"Description","text":"<p>Watchtower can update the running version of your containerized app simply by pushing a new image to the Docker Hub or your own image registry. Watchtower will pull down your new image, gracefully shut down your existing container and restart it with the same options that were used when it was deployed initially.</p>"},{"location":"apps/watchtower/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/watchtower/#notifications","title":"Notifications","text":"<p>The default notification library is Shoutrrr. Shoutrrr offers notifications via Discord, Email, Pushover, Slack, Telegram, and several others. Click on the service for a more thorough explanation.</p> Notification Application Your DockSTARTer <code>WATCHTOWER_NOTIFICATION_URL</code> should follow this: Discord discord://token@channel Email smtp://<code>username</code>:<code>password</code>@<code>host</code>:<code>port</code>/?fromAddress=<code>fromAddress</code>&amp;toAddresses=<code>recipient1</code>[,<code>recipient2</code>,...] Pushover pushover://shoutrrr:<code>apiToken</code>@<code>userKey</code>/?devices=<code>device1</code>[,<code>device2</code>, ...] Slack slack://[<code>botname</code>@]<code>token-a</code>/<code>token-b</code>/<code>token-c</code>* Telegram telegram://<code>token</code>@telegram?channels=<code>channel-1</code>[,<code>channel-2</code>,...]"},{"location":"apps/wireguard/","title":"Wireguard","text":""},{"location":"apps/wireguard/#description","title":"Description","text":"<p>WireGuard is an extremely simple yet fast and modern VPN that utilizes state-of-the-art cryptography. It aims to be faster, simpler, leaner, and more useful than IPsec, while avoiding the massive headache. It intends to be considerably more performant than OpenVPN. WireGuard is designed as a general purpose VPN for running on embedded interfaces and super computers alike, fit for many different circumstances. Initially released for the Linux kernel, it is now cross-platform (Windows, macOS, BSD, iOS, Android) and widely deployable. It is currently under heavy development, but already it might be regarded as the most secure, easiest to use, and simplest VPN solution in the industry.</p>"},{"location":"apps/wireguard/#installsetup","title":"Install/Setup","text":""},{"location":"apps/xbackbone/","title":"XBackBone","text":""},{"location":"apps/xbackbone/#description","title":"Description","text":"<p>XBackBone is a simple and lightweight PHP file manager that supports the instant sharing tool ShareX and *NIX systems. It supports uploading and displaying images, GIFs, video, code, formatted text, pdf, and file downloading and uploading. Also has a web UI with multi-user management, media gallery and search support.</p>"},{"location":"apps/xbackbone/#installsetup","title":"Install/Setup","text":"<p>When installing the XBackBone container, the installer will install under the <code>appdata</code> directory as the root user and you will see errors as such:</p> <pre><code>Executing /opt/docker/provision/entrypoint.d/01-app.sh\nPHP Fatal error:  Uncaught PDOException: SQLSTATE[HY000]\n[14] unable to open database file in\n/app/app/Database/DB.php:20\n</code></pre> <p>You need to update the permissions in your <code>appdata</code> folder for XBackBone. You can do so by running:</p> <pre><code>sudo chown -R $USER:$USER ~/.config/appdata/xbackbone/\n</code></pre> <p>Restart your container by running:</p> <pre><code>docker restart xbackbone\n</code></pre>"},{"location":"apps/xteve/","title":"xTeVe","text":""},{"location":"apps/xteve/#description","title":"Description","text":"<p>xTeVe is a M3U proxy server for Plex, Emby and any client and provider which supports the .TS and .M3U8 (HLS) streaming formats. xTeVe emulates a SiliconDust HDHomeRun OTA tuner, which allows it to expose IPTV style channels to software, which would not normally support it.</p>"},{"location":"apps/xteve/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/yacht/","title":"Yacht","text":""},{"location":"apps/yacht/#description","title":"Description","text":"<p>Yacht is a container management UI with a focus on templates and 1-click deployments.</p>"},{"location":"apps/yacht/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/youtubedl/","title":"youtubedl","text":""},{"location":"apps/youtubedl/#description","title":"Description","text":"<p>youtube-dl-server is very spartan Web and REST interface for downloading youtube videos onto a server. <code>bottle</code> + <code>youtube-dl</code>.</p>"},{"location":"apps/youtubedl/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"apps/znc/","title":"ZNC","text":""},{"location":"apps/znc/#description","title":"Description","text":"<p>ZNC is an IRC network bouncer or BNC. It can detach the client from the actual IRC server, and also from selected channels. Multiple clients from different locations can connect to a single ZNC account simultaneously and therefore appear under the same nickname on IRC.</p>"},{"location":"apps/znc/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. If you need assistance setting up this application please visit our support page.</p>"},{"location":"basics/available-apps/","title":"Available Apps","text":"<p>Please browse the repo here to see which apps are available: https://github.com/GhostWriters/DockSTARTer/tree/master/compose/.apps</p> <p>If an app folder exists then it is available for x86_64. Inside the folder will be files for aarch64 if supported.</p> <p>You can see descriptions of each app in the GUI or in the labels yml file for each app in the repository.</p>"},{"location":"basics/command-line-usage/","title":"Command Line Usage","text":"<p>Assuming you already followed the installation steps in the readme, there are also a number of command line switches you can use with DockSTARTer.</p>"},{"location":"basics/command-line-usage/#command-line-switches","title":"Command Line Switches","text":""},{"location":"basics/command-line-usage/#run-the-install-script","title":"Run The Install Script","text":"<pre><code>ds -i\n</code></pre> <p>This script does the following:</p> <ul> <li>Updates your system using <code>apt-get</code></li> <li>Installs <code>curl</code>, <code>git</code>, <code>grep</code>, and <code>sed</code> (git should already be installed if you started with the install instructions on the main page, but it's here just in case)</li> <li>Installs docker - by downloading via the official docker-install script, used to run containers</li> </ul> <p>When the script finishes it will display a message informing you to reboot if this is the first time you've ran it.</p>"},{"location":"basics/command-line-usage/#run-the-compose-generator","title":"Run The Compose Generator","text":"<pre><code>ds -c\n</code></pre> <p>This script verifies the dependencies above and installs or updates them as needed, then creates a file <code>~/.docker/compose/docker-compose.yml</code> based on the variables you configured in your <code>~/.docker/compose/.env</code> file. The generator script will run your selected containers after creating the file. We encourage you to have a look at the generated <code>docker-compose.yml</code> file, however if you wish to make changes please consider using overrides. Please review the Technical Info and Overrides / Introduction pages.</p> <p>If you make any changes to your <code>.env</code> file (such as changing a port or enabling a new app) you need to rerun the generator which will rebuild only the affected containers.</p>"},{"location":"basics/command-line-usage/#update-dockstarter","title":"Update DockSTARTer","text":"<pre><code>ds -u\n</code></pre> <p>This should get you the latest changes to DockSTARTer. This will also backup and update your <code>.env</code>, <code>env_files/&lt;appname&gt;.env</code> files.</p> <p>You may separately backup and update your <code>.env</code> and <code>env_files/&lt;appname&gt;.env</code> files with the following command.</p> <pre><code>ds -e\n</code></pre> <p>Then you may want to edit your <code>.env</code> and <code>env_files/&lt;appname&gt;.env</code> files and run the generator again to bring up new apps or changes to existing apps.</p>"},{"location":"basics/command-line-usage/#setup-your-environment","title":"Setup Your Environment","text":"<p>If you do not yet have a <code>~/.docker/compose/.env</code> and/or <code>~/.docker/compose/env_file/&lt;appname&gt;.env</code>file:</p> <pre><code>ds -e\n</code></pre> <p>Edit the file using something like <code>nano ~/.docker/compose/.env</code> (CTRL+X will prompt to save and exit the nano editor)</p>"},{"location":"basics/command-line-usage/#application-specific-variables","title":"Application Specific Variables","text":""},{"location":"basics/command-line-usage/#adding-apps","title":"Adding Apps","text":"<p>You can add the variables required to run an app by running:</p> <pre><code>ds -a &lt;APPNAME&gt;\n</code></pre> <pre><code>## Example:\nds -a sonarr\n</code></pre> <p>Then your <code>.env</code> file fill have a variable named <code>&lt;APPNAME&gt;__ENABLED</code> that you can set to <code>true</code> and then run the Compose Generator to start the app.</p> <p>You may also need to fill in or adjust any other variables prefixed with the <code>&lt;APPNAME&gt;__</code> that you're enabling.</p> <p>This is the best place to change the app's external default ports.</p> <p>There will also be an application specific variable file created at <code>~/.docker/compose/env_files/&lt;appname&gt;.env</code>.  This may or not be populated with variables.  The variables included, if any, will entierly depend on the application installed.  If you need to edit the values of the variables, or include any new variables for the app, it is entirely safe to do so.</p>"},{"location":"basics/command-line-usage/#removing-apps","title":"Removing Apps","text":"<p>You can remove the variables for an app by running:</p> <pre><code>ds -r &lt;APPNAME&gt;\n</code></pre> <pre><code>## Example:\nds -r sonarr\n</code></pre> <p>You can also remove all variables for all apps that are disabled by running:</p> <pre><code>ds -r\n</code></pre> <p>You will be prompted individually for each app and shown what will be removed.</p>"},{"location":"basics/command-line-usage/#cleanup-unused-docker-resources","title":"Cleanup Unused Docker Resources","text":"<pre><code>ds -p\n</code></pre> <p>This cleans up the DS install, <code>p</code> stands for prune in this case. This recovers space from old images if they were somehow left over.</p>"},{"location":"basics/env-var-info/","title":".env Variable Info","text":""},{"location":"basics/env-var-info/#compose_http_timeout","title":"COMPOSE_HTTP_TIMEOUT","text":"<ul> <li>Default value: <code>60</code></li> </ul> <p>Description: See Compose HTTP Timeout This can be increased if you are seeing timeout issues when running compose. It is uncommon to need to adjust this option, but has been seen most commonly on very low powered CPU systems (older raspberry pi) or systems with failing storage (hard drives).</p>"},{"location":"basics/env-var-info/#docker_gid","title":"DOCKER_GID","text":"<ul> <li>System Detected value: The owner of the <code>docker</code> group on your system</li> <li>Default value: <code>999</code></li> </ul> <p>Description: Default ID given to the <code>docker</code> group when it is created by Docker</p>"},{"location":"basics/env-var-info/#docker_hostname","title":"DOCKER_HOSTNAME","text":"<ul> <li>System Detected value: The hostname of your system</li> <li>Default value: <code>DockSTARTer</code> (because we don't want it to be accidentally blank)</li> </ul> <p>Description: All containers have their own <code>&lt;APPNAME&gt;__HOSTNAME</code> they use, but the user can use this variable for their own containers if they choose.</p>"},{"location":"basics/env-var-info/#docker_volume_config","title":"DOCKER_VOLUME_CONFIG","text":"<ul> <li>System Detected value: <code>~/.config/appdata</code></li> <li>Default value: <code>~/.config/appdata</code></li> </ul> <p>Description: This is the directory where all your containers' configuration is saved to.</p>"},{"location":"basics/env-var-info/#docker_volume_storage","title":"DOCKER_VOLUME_STORAGE","text":"<ul> <li>System Detected value: <code>~/storage</code></li> <li>Default value: <code>~/storage</code></li> </ul> <p>Description: This directory will be mounted under <code>/storage</code> inside every container across DS. There is no specific use for this directory, it can be used however you like.</p>"},{"location":"basics/env-var-info/#global_lan_network","title":"GLOBAL_LAN_NETWORK","text":"<ul> <li>System Detected value: Detects your local IP range.</li> <li>Default value: <code>192.168.x.x/24</code></li> </ul> <p>Description: If this value is blank or contains <code>x</code> DockSTARTer will automatically replace it with the System Detected value. Only accepts values in these ranges 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16.</p>"},{"location":"basics/env-var-info/#global_ns1","title":"GLOBAL_NS1","text":"<ul> <li>Default value: <code>1.1.1.1</code></li> </ul> <p>Description: This IP address will be used as a default name server for some installed applications.</p>"},{"location":"basics/env-var-info/#global_ns2","title":"GLOBAL_NS2","text":"<ul> <li>Default value: <code>8.8.8.8</code></li> </ul> <p>Description: This IP address will be used as a default name server for some installed applications.</p>"},{"location":"basics/env-var-info/#pgid","title":"PGID","text":"<ul> <li>System Detected value: Detects the ID of your group</li> <li>Default value: <code>1000</code> because this is the most common default on supported OS</li> </ul> <p>Description: This value can be obtained by using <code>id -g $USER</code>.</p>"},{"location":"basics/env-var-info/#puid","title":"PUID","text":"<ul> <li>System Detected value: Detects the ID of your user</li> <li>Default value: <code>1000</code> because this is the most common default on supported OS</li> </ul> <p>Description: This value can be obtained by using <code>id -u $USER</code>.</p>"},{"location":"basics/env-var-info/#tz","title":"TZ","text":"<ul> <li>System Detected value: Uses the value found in <code>/etc/timezone</code></li> <li>Default value: <code>America/Chicago</code> because that's @nemchik's timezone (CST)</li> </ul> <p>Description: System timezone, see list of TZ Database Time Zones.</p>"},{"location":"basics/env-var-info/#deprecated-vars","title":"DEPRECATED VARS","text":""},{"location":"basics/env-var-info/#dockerlogging_maxfile","title":"DOCKERLOGGING_MAXFILE","text":"<ul> <li>Default value: <code>10</code></li> </ul> <p>Description: The maximum number of log files that can be present. If rolling the logs creates excess files, the oldest file is removed.</p>"},{"location":"basics/env-var-info/#dockerlogging_maxsize","title":"DOCKERLOGGING_MAXSIZE","text":"<ul> <li>Default value: <code>200k</code></li> </ul> <p>Description: The maximum size of the log before it is rotated. Size is specified in kilobytes.</p>"},{"location":"basics/env-var-info/#downloadsdir","title":"DOWNLOADSDIR","text":"<p>DEPRECATION NOTICE: This variable is now deprecated in favor of <code>DOCKER_VOLUME_STORAGE</code> which is mounted as a volume in all containers as <code>/storage</code>. This variable will be completely removed from all DockSTARTer app templates and no longer mounted as a volume at the end of 2020. The variable will not be removed from your <code>.env</code> file, however it will be sorted into the application specific variables at the bottom. If you require the volume you can continue using it via an override.</p> <ul> <li>Default value: <code>/mnt/downloads</code></li> </ul> <p>Description: This directory will be mounted under <code>/downloads</code> inside any container that is used for downloading. Do not use this directory as permanent storage for your media. See below for <code>MEDIADIR</code> directories.</p> <p>NOTE: <code>DOWNLOADSDIR</code> also gets mounted to <code>/data</code> inside some containers because that is what binhex containers use. They will not work as intended otherwise.</p>"},{"location":"basics/env-var-info/#mediadir_audiobooks","title":"MEDIADIR_AUDIOBOOKS","text":"<p>DEPRECATION NOTICE: This variable is now deprecated in favor of <code>DOCKER_VOLUME_STORAGE</code> which is mounted as a volume in all containers as <code>/storage</code>. This variable will be completely removed from all DockSTARTer app templates and no longer mounted as a volume at the end of 2020. The variable will not be removed from your <code>.env</code> file, however it will be sorted into the application specific variables at the bottom. If you require the volume you can continue using it via an override.</p> <ul> <li>System Detected value: <code>~/Audioooks</code></li> <li>Default value: <code>/mnt/medialibrary/audiobooks</code></li> </ul> <p>Description: This directory will be mounted under <code>/audiobooks</code> inside any container that is used to access your audiobooks library. This directory is meant to store media permanently.</p>"},{"location":"basics/env-var-info/#mediadir_books","title":"MEDIADIR_BOOKS","text":"<p>DEPRECATION NOTICE: This variable is now deprecated in favor of <code>DOCKER_VOLUME_STORAGE</code> which is mounted as a volume in all containers as <code>/storage</code>. This variable will be completely removed from all DockSTARTer app templates and no longer mounted as a volume at the end of 2020. The variable will not be removed from your <code>.env</code> file, however it will be sorted into the application specific variables at the bottom. If you require the volume you can continue using it via an override.</p> <ul> <li>System Detected value: <code>~/Books</code></li> <li>Default value: <code>/mnt/medialibrary/books</code></li> </ul> <p>Description: This directory will be mounted under <code>/books</code> inside any container that is used to access your books library. This directory is meant to store media permanently.</p>"},{"location":"basics/env-var-info/#mediadir_comics","title":"MEDIADIR_COMICS","text":"<p>DEPRECATION NOTICE: This variable is now deprecated in favor of <code>DOCKER_VOLUME_STORAGE</code> which is mounted as a volume in all containers as <code>/storage</code>. This variable will be completely removed from all DockSTARTer app templates and no longer mounted as a volume at the end of 2020. The variable will not be removed from your <code>.env</code> file, however it will be sorted into the application specific variables at the bottom. If you require the volume you can continue using it via an override.</p> <ul> <li>System Detected value: <code>~/Comics</code></li> <li>Default value: <code>/mnt/medialibrary/comics</code></li> </ul> <p>Description: This directory will be mounted under <code>/comics</code> inside any container that is used to access your comics library. This directory is meant to store media permanently.</p>"},{"location":"basics/env-var-info/#mediadir_movies","title":"MEDIADIR_MOVIES","text":"<p>DEPRECATION NOTICE: This variable is now deprecated in favor of <code>DOCKER_VOLUME_STORAGE</code> which is mounted as a volume in all containers as <code>/storage</code>. This variable will be completely removed from all DockSTARTer app templates and no longer mounted as a volume at the end of 2020. The variable will not be removed from your <code>.env</code> file, however it will be sorted into the application specific variables at the bottom. If you require the volume you can continue using it via an override.</p> <ul> <li>System Detected value: <code>~/Movies</code></li> <li>Default value: <code>/mnt/medialibrary/movies</code></li> </ul> <p>Description: This directory will be mounted under <code>/movies</code> inside any container that is used to access your movie library. This directory is meant to store media permanently.</p>"},{"location":"basics/env-var-info/#mediadir_music","title":"MEDIADIR_MUSIC","text":"<p>DEPRECATION NOTICE: This variable is now deprecated in favor of <code>DOCKER_VOLUME_STORAGE</code> which is mounted as a volume in all containers as <code>/storage</code>. This variable will be completely removed from all DockSTARTer app templates and no longer mounted as a volume at the end of 2020. The variable will not be removed from your <code>.env</code> file, however it will be sorted into the application specific variables at the bottom. If you require the volume you can continue using it via an override.</p> <ul> <li>System Detected value: <code>~/Music</code></li> <li>Default value: <code>/mnt/medialibrary/music</code></li> </ul> <p>Description: This directory will be mounted under <code>/music</code> inside any container that is used to access your music library. This directory is meant to store media permanently.</p>"},{"location":"basics/env-var-info/#mediadir_tv","title":"MEDIADIR_TV","text":"<p>DEPRECATION NOTICE: This variable is now deprecated in favor of <code>DOCKER_VOLUME_STORAGE</code> which is mounted as a volume in all containers as <code>/storage</code>. This variable will be completely removed from all DockSTARTer app templates and no longer mounted as a volume at the end of 2020. The variable will not be removed from your <code>.env</code> file, however it will be sorted into the application specific variables at the bottom. If you require the volume you can continue using it via an override.</p> <ul> <li>System Detected value: <code>~/TV</code></li> <li>Default value: <code>/mnt/medialibrary/tv</code></li> </ul> <p>Description: This directory will be mounted under <code>/tv</code> inside any container that is used to access your TV library. This directory is meant to store media permanently.</p>"},{"location":"basics/env-var-info/#vpn_client","title":"VPN_CLIENT","text":"<ul> <li>Default value: <code>openvpn</code></li> </ul> <p>Description: Only accepts <code>openvpn</code> or <code>wireguard</code>.</p>"},{"location":"basics/env-var-info/#vpn_enable","title":"VPN_ENABLE","text":"<ul> <li>Default value: <code>yes</code></li> </ul> <p>Description: Only accepts <code>yes</code> or <code>no</code>. It specifies whether the VPN is enabled or not to be used by VPN enabled containers.</p>"},{"location":"basics/env-var-info/#vpn_options","title":"VPN_OPTIONS","text":"<ul> <li>Default value: Empty</li> </ul> <p>Description:</p>"},{"location":"basics/env-var-info/#vpn_ovpndir","title":"VPN_OVPNDIR","text":"<ul> <li>Default value: <code>~/.config/appdata/.openvpn</code></li> </ul> <p>Description: This directory will be used to store <code>ovpn</code> configurations that will be used by containers that are VPN enabled.</p>"},{"location":"basics/env-var-info/#vpn_pass","title":"VPN_PASS","text":"<ul> <li>Default value: Empty</li> </ul> <p>Description: This is the password you use to login to your VPN provider.</p>"},{"location":"basics/env-var-info/#vpn_prov","title":"VPN_PROV","text":"<ul> <li>Default value: <code>custom</code></li> </ul> <p>Description:</p>"},{"location":"basics/env-var-info/#vpn_user","title":"VPN_USER","text":"<ul> <li>Default value: Empty</li> </ul> <p>Description: This is the username you use to login with to your VPN provider.</p>"},{"location":"basics/env-var-info/#vpn_wgdir","title":"VPN_WGDIR","text":"<ul> <li>Default value: <code>~/.config/appdata/.wireguard</code></li> </ul> <p>Description: This directory will be used to store the <code>wg0.conf</code> file that will be used by containers that are VPN enabled.</p>"},{"location":"basics/faq/","title":"FAQ","text":""},{"location":"basics/faq/#support","title":"Support","text":"<p>Refer to our Support Page for our Support Channels and Tutorials we have found users have made with DockSTARTer!</p>"},{"location":"basics/faq/#relocating-appdata","title":"Relocating <code>appdata</code>","text":"<p>For new installs the default <code>DOCKER_VOLUME_CONFIG</code> is <code>~/.config/appdata</code>. Users who ran DockSTARTer before this location became the default may have <code>~/.docker/config</code>, and we advise relocating.</p> <p>If you'd like to move your existing config to a new location you can do the following: Edit <code>~/. docker/compose/.env</code> (in any text editor) and set</p> <pre><code>DOCKER_VOLUME_CONFIG=~/.config/appdata\n</code></pre> <p>(You can choose anywhere to save configs, this example only shows the default location).</p> <p>Then run the following commands:</p> <pre><code>ds -u\nds -c down\n# Move your current config folder to the new location, ex:\nsudo mv ~/.docker/config ~/.config/appdata\nds -c\n</code></pre> <p>That's it! Your containers should fire right back up as if nothing has changed. If you have any issues feel free to ask for help in <code>#ds-support</code></p>"},{"location":"basics/faq/#watchtower-enabled-by-default","title":"Watchtower Enabled By Default","text":"<p>This tool is extremely useful for people getting used to running Docker. Its official documentation should explain why but you can disable it if you want.</p> <p>Watchtower will pull down your new image, gracefully shut down your existing container and restart it with the same options that were used when it was deployed initially.</p> <p>In short, Watchtower keeps your containers up to date.</p>"},{"location":"basics/faq/#watchtower-faq","title":"Watchtower FAQ","text":""},{"location":"basics/faq/#when-i-run-ds-c-and-it-recreates-some-of-the-containers-is-that-because-they-have-had-updates-from-last-run","title":"When I run <code>ds -c</code> and it recreates some of the containers, is that because they have had updates from last run","text":"<p>With Watchtower your containers will be updated to the latest images automatically. However, docker-compose has no idea what's updated, docker-compose keeps track of things independently from Watchtower. Additionally, Watchtower doesn't update docker-compose's method of tracking, therefore, compose might \"recreate\" containers that are already up to date. This is not a big deal it's basically just a container restart, and you were planning on running <code>ds -c</code> expecting some kind of updates anyway.</p>"},{"location":"basics/faq/#general-troubleshooting-help","title":"General troubleshooting help","text":"<p>You can see the (quite helpful) logs of each container with the <code>docker logs &lt;appname&gt;</code> command.</p> <p>Additionally, you can also use Dozzle if you prefer to view logs using your browser.</p>"},{"location":"basics/faq/#reported-issues","title":"Reported Issues","text":""},{"location":"basics/faq/#creating-network-compose_default-with-the-default-driver-error-could-not-find-an-available-non-overlapping-ipv4-address-pool-among-the-defaults-to-assign-to-the-network","title":"Creating network \"compose_default\" with the default driver ERROR: could not find an available, non-overlapping IPv4 address pool among the defaults to assign to the network","text":"<p>This error can occur if your connected to a VPN while setting up the containers. Simply temporarily disconnect your VPN connection until the containers have been created and then reconnect again.</p>"},{"location":"basics/faq/#starting-containers-and-getting-the-following-or-a-similar-error-message-listen-udp-00005353-bind-address-already-in-use","title":"Starting containers and getting the following or a similar error message: \"listen udp 0.0.0.0:5353: bind: address already in use\"","text":"<p>As you could probably guess this means an application (most likely Plex) is trying to use a port that is already in use. You can check which application it is with:</p> <pre><code>sudo lsof -i :&lt;myport&gt;\n</code></pre> <p>So in this example it would be:</p> <pre><code>sudo lsof -i :5353\n</code></pre> <p>which will show you that Google Chrome is using the port you need. In this case you could just close Chrome, but there may be applications you need to uninstall for this to work properly.</p>"},{"location":"basics/migration/","title":"Migration","text":""},{"location":"basics/migration/#from-local-installs","title":"From local installs","text":"<ul> <li>Stop the service for the existing app (so that ports are available)</li> <li>Start the app using DockSTARTer so that the config folder structure is created (<code>~/.config/appdata/&lt;appname&gt;</code> by default)</li> <li>Stop the app's docker container (<code>docker stop &lt;appname&gt;</code>)</li> <li>Locate the config of the local installation and copy it to <code>~/.config/appdata/&lt;appname&gt;</code> (only grab the required files)</li> <li>Start the app (<code>ds -c</code>)</li> <li>Inside the app's config, or settings web interface, adjust the folder locations that make use of files on the disk to match the docker volumes for the container</li> <li>Adjust the app config to communicate with other existing apps (both in and out of docker as needed)</li> <li>Optionally uninstall/remove original app and dependencies</li> </ul>"},{"location":"basics/migration/#from-other-docker-containers","title":"From other Docker containers","text":"<ul> <li>Stop the app's old docker container</li> <li>Start the app using DockSTARTer so that the config folder structure is created (<code>~/.config/appdata/&lt;appname&gt;</code> by default)</li> <li>Stop the app's new docker container (<code>docker stop &lt;appname&gt;</code>)</li> <li>Locate the config of the old docker container and copy it to <code>~/.config/appdata/&lt;appname&gt;</code> (only grab the required files)</li> <li>Start the app (<code>ds -c</code>)</li> <li>Inside the app's config, or settings web interface, adjust the folder locations that make use of files on the disk to match the docker volumes for the new container</li> <li>Adjust the app config to communicate with other existing apps (both in and out of docker as needed)</li> <li>Remove the app's old docker container</li> </ul>"},{"location":"basics/migration/#example","title":"Example","text":"<p>Sonarr's config is commonly found in <code>~/.config/NzbDrone</code>. Following the instructions above, all files in <code>~/.config/NzbDrone</code> would be copied to <code>~/.config/appdata/sonarr</code>. After starting the new Sonarr in Docker, modify the Root Folder settings to tell Sonarr where your files are. DockSTARTer maps the true location of your media folders to locations the container expects to see such as <code>/tv</code> in the case of Sonarr, so that is where you will set your root folder. You will also need to modify your settings that have Sonarr connect to other apps such as Usenet or Torrent download clients. Rather than an IP address or <code>localhost</code> you would just use the name of the download client app, ex: <code>nzbget</code> as the hostname. The same would apply for any connections between any app.</p>"},{"location":"basics/port-conflicts/","title":"Port Conflicts","text":""},{"location":"basics/port-conflicts/#issueproblem","title":"Issue/Problem","text":"<p>During configuration the script exits with an error like the following:</p> <p>ERROR: for plex cannot start service plex: driver failed programming external connectivity on endpoint plex (5a4d78fd5ff6c4c1a978ef31): Error starting userland proxy: listen udp 0.0.0.0:5353: bind: address already in use ERROR: Encountered errors while bringing up the project. 2019-02-13 17:38:19 [FATAL] Docker Compose failed.</p> <p>This is due to another service that has occupied that port disallowing DockSTARTer from installing a service on that port.</p>"},{"location":"basics/port-conflicts/#troubleshooting-methods","title":"Troubleshooting Methods","text":"<p>As DockSTARTer will check and fail if another service is occupying the port, it is necessary to locate and deal with the conflict.</p> <p>One way is to locate the service currently occupying the port. You can do the following:</p> <pre><code># sudo netstat -ltunp | grep -w ':&lt;port&gt;'\n## Example:\nsudo netstat -ltunp | grep -w ':8080'\n</code></pre> <p>Once you locate the offending service then you can choose what to do.</p>"},{"location":"basics/port-conflicts/#resolutionssolutions","title":"Resolutions/Solutions","text":"<p>Example: If you have avahi-daemon installed this will conflict with udp/5353 port usage for iTunes in Plex if selected. This will cause the script to exit with an [ERROR] and a [FATAL].</p> <p>One resolution is to change the port being bound during configuration. During configuration change the external port exposed from 5353 to 5354 (or another unused port). This will resolve the conflict.</p> <p>Another resolution would be to remove the software that is in conflict. Again as the example above. If you are not using mDNS resolution then avahi-daemon would be unnecessary. Simply remove the package with <code>apt remove avahi-daemon</code> from the base server. This will remove the offending service and allow the port to be used by the Docker service.</p>"},{"location":"basics/support/","title":"Support","text":""},{"location":"basics/support/#official-support","title":"Official Support","text":"<p>Click the chat badge to join us on Discord for support!</p> <p>Also check out our subreddit, /r/DockSTARTer</p> <p>Submit a Feature Request</p> <p>Submit a Bug Report</p>"},{"location":"basics/support/#external-information","title":"External Information","text":"<p>Below you will find links to various tutorial videos, blogs, and guides users have made.</p> <ul> <li>DBTech - Raspberry Pi 4: Ultimate Home Server with DockerSTARTer Blog Post &amp; Video Tutorial</li> <li>MakeUseOf.com - How to Set Up a Linux Media Server in Under One Hour Tutorial</li> <li>Borked.io - Docker In Your HomeLab - Getting Started Tutorial</li> <li>Servermania.com - How to Setup and Use a Plex Media Server for Movies and TV Tutorial</li> </ul>"},{"location":"overrides/autoscan/","title":"Autoscan","text":""},{"location":"overrides/autoscan/#description","title":"Description","text":"<p>Autoscan replaces the default Plex and Emby behaviour for picking up changes on the file system.</p>"},{"location":"overrides/autoscan/#installsetup","title":"Install/Setup","text":""},{"location":"overrides/autoscan/#example-docker-compose-override","title":"Example Docker Compose Override","text":"<pre><code>services:\n  autoscan:\n    image: cloudb0x/autoscan:latest\n    hostname: ${DOCKER_HOSTNAME}\n    ports:\n      - 3030:3030\n    container_name: autoscan\n    environment:\n      - AUTOSCAN_VERBOSITY=0\n      - PGID=${PGID}\n      - PUID=${PUID}\n      - TZ=${TZ}\n    restart: unless-stopped\n    volumes:\n      - /etc/localtime:/etc/localtime:ro\n      - /mnt/remote:/mnt/remote:ro\n      - /opt/sa:/opt/sa\n      - ${DOCKER_VOLUME_CONFIG}/autoscan:/config\n      - ${DOCKER_VOLUME_STORAGE}:/storage\n</code></pre>"},{"location":"overrides/bw_plex/","title":"bw_plex","text":""},{"location":"overrides/bw_plex/#description","title":"Description","text":"<p>bw_plex is a tool for skipping intro and outro for plex.</p>"},{"location":"overrides/bw_plex/#installsetup","title":"Install/Setup","text":""},{"location":"overrides/bw_plex/#env-variable","title":"ENV Variable","text":"<p>The bw_plex override uses Variables that you will need to update your <code>.env</code> with the below example.</p> <pre><code>BW_PLEX_TOKEN=your_plex_x_token\nBW_PLEX_URL=http://plex:32400\n</code></pre>"},{"location":"overrides/bw_plex/#example-docker-compose-override","title":"Example Docker Compose Override","text":"<pre><code>services:\n  bw_plex:\n    image: hellowlol/bw_plex:latest\n    container_name: bw_plex\n    restart: unless-stopped\n    volumes:\n      - /etc/localtime:/etc/localtime:ro\n      - ${DOCKER_VOLUME_CONFIG}/bw_plex:/config\n      - ${DOCKER_VOLUME_STORAGE}:/storage\n    command: bw_plex --url ${BW_PLEX_URL} -t ${BW_PLEX_TOKEN} -df /config watch\n</code></pre>"},{"location":"overrides/conreq/","title":"Conreq","text":""},{"location":"overrides/conreq/#description","title":"Description","text":"<p>Conreq is a application for managing requests for your media library. It integrates with your existing services such as Sonarr, and Radarr! (Like Ombi)</p>"},{"location":"overrides/conreq/#installsetup","title":"Install/Setup","text":""},{"location":"overrides/conreq/#example-docker-compose-override","title":"Example Docker Compose Override","text":"<pre><code>services:\n  conreq:\n    container_name: conreq\n    environment:\n      - PGID=${PGID}\n      - PUID=${PUID}\n      - TZ=${TZ}\n    hostname: ${DOCKER_HOSTNAME}\n    image: ghcr.io/roxedus/conreq:latest\n    ports:\n      - 8000:8000\n    restart: unless-stopped\n    volumes:\n      - /etc/localtime:/etc/localtime:ro\n      - ${DOCKER_VOLUME_CONFIG}/conreq:/config\n      - ${DOCKER_VOLUME_STORAGE}:/storage\n</code></pre>"},{"location":"overrides/dashmachine/","title":"Dashmachine","text":""},{"location":"overrides/dashmachine/#description","title":"Description","text":"<p>Dashmachine is a web application bookmark dashboard, with fun features.</p>"},{"location":"overrides/dashmachine/#installsetup","title":"Install/Setup","text":""},{"location":"overrides/dashmachine/#example-docker-compose-override","title":"Example Docker Compose Override","text":"<pre><code>services:\n  dashmachine:\n    container_name: dashmachine\n    hostname: ${DOCKER_HOSTNAME}\n    image: rmountjoy/dashmachine:latest\n    ports:\n      - 5002:5000\n    restart: unless-stopped\n    volumes:\n      - /etc/localtime:/etc/localtime:ro\n      - ${DOCKER_VOLUME_CONFIG}/dashmachine:/DashMachine/dashmachine/user_data\n      - ${DOCKER_VOLUME_STORAGE}:/storage\n</code></pre>"},{"location":"overrides/introduction/","title":"Overrides Intro","text":"<p>The YML files included with and generated by DockSTARTer are NOT meant to be modified.</p> <ul> <li>Updating DockSTARTer will overwrite the YML files in <code>~/.docker/compose/.apps/</code>.</li> <li>The <code>~/.docker/compose/docker-compose.yml</code> file is generated and rewritten by DockSTARTer when you use the Configuration menu or run <code>ds -c</code>.</li> </ul> <p>If you would like to make some adjustments, the best way is to use a <code>docker-compose.override.yml</code> file.</p> <p>Docker Compose will look for <code>~/.docker/compose/docker-compose.override.yml</code>. Anything you set in this file will be merged in and take priority over the regular configurations.</p>"},{"location":"overrides/introduction/#types-of-overrides","title":"Types of Overrides","text":"<p>You can use overrides to:</p> <ul> <li>Modify an existing app (such as changing which image the app uses)</li> <li>Add an entirely new app that's not included in DockSTARTer</li> </ul>"},{"location":"overrides/introduction/#modify-an-existing-app","title":"Modify an Existing App","text":"<p>The example below will change Sonarr to use hotio's image for Sonarr and add a /media volume. Everything else from the original config, such as the remaining volumes and environment variables, will be preserved and merged with the override config.</p>"},{"location":"overrides/introduction/#partial-override-merge-example","title":"Partial Override Merge Example","text":"<pre><code>services:\n  sonarr:\n    image: ghcr.io/hotio/sonarr:latest\n    volumes:\n      - /etc/localtime:/etc/localtime:ro\n      - ${DOCKER_VOLUME_CONFIG}/sonarr:/config\n      - ${DOCKER_VOLUME_STORAGE}:/storage\n</code></pre>"},{"location":"overrides/introduction/#add-a-new-app","title":"Add a New App","text":"<p>The example below will use the override file to add an app not included in DockSTARTer. With this approach, you must add all of the Docker Compose YAML configuration required for the app.</p>"},{"location":"overrides/introduction/#full-app-override-example","title":"Full App Override Example","text":"<pre><code>services:\n  alltube:\n    container_name: alltube\n    environment:\n      - PGID=1000\n      - PUID=1000\n    image: rudloff/alltube:latest\n    ports:\n      - \"1234:80\"\n    restart: unless-stopped\n    volumes:\n      - /etc/localtime:/etc/localtime:ro\n      - ${DOCKER_VOLUME_CONFIG}/alltube:/var/www/html/config\n      - ${DOCKER_VOLUME_STORAGE}:/storage\n</code></pre> <p>Make sure to run <code>ds -c</code> or <code>ds -c up &lt;appname&gt;</code> after you make changes to your override file.</p>"},{"location":"overrides/nginxproxymanager/","title":"Nginx Proxy Manager","text":""},{"location":"overrides/nginxproxymanager/#description","title":"Description","text":"<p>Nginx Proxy Manager is a Docker container for managing Nginx proxy hosts and SSL Certificates with a simple, powerful interface.</p>"},{"location":"overrides/nginxproxymanager/#installsetup","title":"Install/Setup","text":""},{"location":"overrides/nginxproxymanager/#config-file","title":"Config File","text":"<p>Nginx Proxy Manager requires a Configuration file named <code>config.json</code>. This file needs to be in the appdata folder for NPM before it is started.</p> <pre><code>{\n  \"database\": {\n    \"engine\": \"mysql\",\n    \"host\": \"db\",\n    \"name\": \"npm\",\n    \"user\": \"npm\",\n    \"password\": \"npm\",\n    \"port\": \"3306\"\n  }\n}\n</code></pre>"},{"location":"overrides/nginxproxymanager/#example-docker-compose-override","title":"Example Docker Compose Override","text":"<pre><code>services:\n  proxymanager:\n    image: jc21/nginx-proxy-manager:latest\n    container_name: proxymanager\n    ports:\n      - \"80:80\"\n      - \"81:81\"\n      - \"443:443\"\n    restart: unless-stopped\n    volumes:\n      - ${DOCKER_VOLUME_CONFIG}/proxymanager/config.json:/app/config/config.json\n      - ${DOCKER_VOLUME_CONFIG}/proxymanager/data:/data\n      - ${DOCKER_VOLUME_CONFIG}/proxymanager/letsencrypt:/etc/letsencrypt\n      - ${DOCKER_VOLUME_STORAGE}:/storage\n</code></pre>"},{"location":"overrides/plpp/","title":"PLPP","text":""},{"location":"overrides/plpp/#description","title":"Description","text":"<p>PHP Library Presenter for PLEX provides a PHP front end to simply present PLEX libraries on the web without the possibility to play or download the library items. Currently movie/home video, TV show, music and photo/picture libraries are supported.</p>"},{"location":"overrides/plpp/#installsetup","title":"Install/Setup","text":""},{"location":"overrides/plpp/#example-docker-compose-override","title":"Example Docker Compose Override","text":"<pre><code>services:\n  plpp:\n    container_name: plpp\n    environment:\n      - PGID=${PGID}\n      - PUID=${PUID}\n      - TZ=${TZ}\n    hostname: ${DOCKER_HOSTNAME}\n    image: tronyx/docker-plpp:latest\n    ports:\n      - 8383:80\n    restart: unless-stopped\n    volumes:\n      - /etc/localtime:/etc/localtime:ro\n      - ${DOCKER_VOLUME_CONFIG}/plpp:/config\n      - ${DOCKER_VOLUME_STORAGE}:/storage\n</code></pre>"},{"location":"overrides/yacreader/","title":"YACReader Server","text":""},{"location":"overrides/yacreader/#description","title":"Description","text":"<p>YACReader is for Reading, Browsing, And Managing your Digital Comics Collection.</p>"},{"location":"overrides/yacreader/#example-docker-compose-override","title":"Example Docker Compose Override","text":"<pre><code>services:\n  yacreaderlibraryserver:\n    image: muallin/yacreaderlibrary-server-docker:latest\n    container_name: yacreaderlibraryserver\n    restart: unless-stopped\n    volumes:\n      - /etc/localtime:/etc/localtime:ro\n      - ${DOCKER_VOLUME_CONFIG}/yacreaderlibraryserver:/config\n      - ${DOCKER_VOLUME_STORAGE}:/storage\n    ports:\n      - \"8080:8080\"\n</code></pre>"}]}
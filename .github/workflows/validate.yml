name: Validate

on: [push, pull_request]

jobs:
  validate-docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.2.2
      - name: Validate Documentation
        run: |
          for APPFOLDER in compose/.apps/*; do
              APPNAME=$(basename "${APPFOLDER}")
              APPDEPRECATED=$(grep --color=never -Po "\scom\.dockstarter\.appinfo\.deprecated: \K.*" "compose/.apps/${APPNAME}/${APPNAME}.labels.yml" | sed -E 's/^([^"].*[^"])$/"\1"/' | xargs || echo false)
              if [[ ${APPDEPRECATED} == true ]]; then
                  continue
              fi
              if [[ ! -f "docs/apps/${APPNAME}.md" ]]; then
                  echo "Missing documentation for ${APPNAME}"
                  exit 1
              fi
              if ! grep -q "apps/${APPNAME}.md" mkdocs.yml; then
                  echo "Missing link for ${APPNAME}"
                  exit 1
              fi
          done

  # validate-images:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4.2.2
  #     - name: Validate Images
  #       run: |
  #         for APPFOLDER in compose/.apps/*; do
  #             APPNAME=$(basename "${APPFOLDER}")
  #             APPDEPRECATED=$(grep --color=never -Po "\scom\.dockstarter\.appinfo\.deprecated: \K.*" "compose/.apps/${APPNAME}/${APPNAME}.labels.yml" | sed -E 's/^([^"].*[^"])$/"\1"/' | xargs || echo false)
  #             if [[ ${APPDEPRECATED} == true ]]; then
  #                 continue
  #             fi
  #             APPIMAGE=$(grep --color=never -Po "\simage: \K.*" "compose/.apps/${APPNAME}/${APPNAME}.x86_64.yml" | sed -E 's/([^:]+):[^:]+/\1/' | xargs || echo false)
  #             APPTAG=$(grep --color=never -Po "\scom\.dockstarter\.appvars\.${APPNAME}_tag: \K.*" "compose/.apps/${APPNAME}/${APPNAME}.labels.yml" | sed -E 's/^([^"].*[^"])$/"\1"/' | xargs || echo false)
  #             echo "Image: ${APPIMAGE}:${APPTAG}"
  #             docker run --rm mplatform/mquery "${APPIMAGE}:${APPTAG}"
  #         done
